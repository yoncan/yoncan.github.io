<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>HI~ 杨小样</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://yoncan.github.io/"/>
  <updated>2017-01-09T15:42:19.816Z</updated>
  <id>https://yoncan.github.io/</id>
  
  <author>
    <name>杨小样</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>我的愤怒</title>
    <link href="https://yoncan.github.io/blog/2017/01/my-anger.html"/>
    <id>https://yoncan.github.io/blog/2017/01/my-anger.html</id>
    <published>2017-01-09T12:53:51.000Z</published>
    <updated>2017-01-09T15:42:19.816Z</updated>
    
    <content type="html"><![CDATA[<p>今天的心情很复杂,也很气人. 当然啦,原因来自于工作.</p>
<h1 id="关于我的工作"><a href="#关于我的工作" class="headerlink" title="关于我的工作"></a>关于我的工作</h1><p>我是做游戏运维的,在这家公司做为运维的负责人. 入职这家公司,还只有1个多月时间(当然也就没有转正).<br>出于对工作的责任,以及对自己严苛的要求. 很难想象,我在抱怨这家公司(领导).</p>
<h1 id="关于我做的事情"><a href="#关于我做的事情" class="headerlink" title="关于我做的事情"></a>关于我做的事情</h1><p>今天刚好公司要求写一个<code>&lt;述职报告&gt;</code>, 我描述了我在不到2个月的时间内所做的事情.<br><img src="/assert/images/2017-01-09-my-anger/shuzhi.jpg" alt=" 我的述职报告 "></p>
<p>对! 你能看到, 我在”写文档”上”浪费了”大量的时间. 当然,这是源于领导的安排.</p>
<h1 id="事故的缘由"><a href="#事故的缘由" class="headerlink" title="事故的缘由"></a>事故的缘由</h1><p>承担了不该承担的任务,然而你做的事情,他总能挑出刺来.<br>什么是事件系统,是一个以客服/运营为起点,专门针对于运维,用来客服/运营人员针对于线上问题提交问题给运维的一个系统.<br>这个系统估计大型的公司才会有.<br>而我为什么又很气愤了?<br>有没有想过一个场景, 一个不参与到部门下面具体的工作的技术总监, 一个不懂代码的总监, 一个只会把上面要求任务,转手就丢给下属的总监,对于这样的一个环境来说.<br>我想,你肯定你同样会很痛苦.</p>
<p>妈妈说: 对于一个对工作付出了心血和劳动的人来说,及时他做的不完美,或者他完全是错的. 你也不要觉得他做的一文不值,因为这里面有他的心血.</p>
<h1 id="我想说的话"><a href="#我想说的话" class="headerlink" title="我想说的话"></a>我想说的话</h1><ul>
<li>人人都需要一面镜子<br>  人非圣贤,孰能无过. 所以不管什么时候,你都需要能有一面镜子,站在对面,能时刻审视自己.<br>  换位思考,或许能更好的说明问题.<br>  妈妈说: 当我们需要交朋友和别人谈话的时候, 首先是要谈别人感兴趣的事情.</li>
</ul>
<ul>
<li><p>什么是以身作则<br>  感谢我的第一份领导,<code>东信</code>的彭工. 他教我,什么是”树立标杆,以身作则”,别人不愿意的事情,你要”先做”.<br>  所以之后,一直到现在,我都做得比别人”多”, 也让自己参与到每一件事情中.</p>
</li>
<li><p>什么是言行合一<br>  以行践言,知行合一. 对于从你口中说过的每一句话, 那都是一个承若. 你若做不到, 你可以不说. 但不要轻易的说出口.</p>
<a id="more"></a>
</li>
</ul>
<h1 id="之后的放弃"><a href="#之后的放弃" class="headerlink" title="之后的放弃"></a>之后的放弃</h1><p>这个系统我是不打算开发了,因为不涉及到公司的机密,把他开源到 <a href="https://github.com/yoncan/KSEventSystem" target="_blank" rel="external">https://github.com/yoncan/KSEventSystem</a><br>放弃其实很痛苦的, 也至少是我一周的心血.</p>
<h1 id="一些截图"><a href="#一些截图" class="headerlink" title="一些截图"></a>一些截图</h1><p><img src="/assert/images/2017-01-09-my-anger/demo1.jpg" alt="demo1"><br><img src="/assert/images/2017-01-09-my-anger/demo2.jpg" alt="demo2"><br><img src="/assert/images/2017-01-09-my-anger/demo3.jpg" alt="demo3"></p>
<h1 id="可能"><a href="#可能" class="headerlink" title="可能"></a>可能</h1><ul>
<li>可能,我会选择在年前离开这里</li>
<li>可能,我选择隐忍</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;今天的心情很复杂,也很气人. 当然啦,原因来自于工作.&lt;/p&gt;
&lt;h1 id=&quot;关于我的工作&quot;&gt;&lt;a href=&quot;#关于我的工作&quot; class=&quot;headerlink&quot; title=&quot;关于我的工作&quot;&gt;&lt;/a&gt;关于我的工作&lt;/h1&gt;&lt;p&gt;我是做游戏运维的,在这家公司做为运维的负责人. 入职这家公司,还只有1个多月时间(当然也就没有转正).&lt;br&gt;出于对工作的责任,以及对自己严苛的要求. 很难想象,我在抱怨这家公司(领导).&lt;/p&gt;
&lt;h1 id=&quot;关于我做的事情&quot;&gt;&lt;a href=&quot;#关于我做的事情&quot; class=&quot;headerlink&quot; title=&quot;关于我做的事情&quot;&gt;&lt;/a&gt;关于我做的事情&lt;/h1&gt;&lt;p&gt;今天刚好公司要求写一个&lt;code&gt;&amp;lt;述职报告&amp;gt;&lt;/code&gt;, 我描述了我在不到2个月的时间内所做的事情.&lt;br&gt;&lt;img src=&quot;/assert/images/2017-01-09-my-anger/shuzhi.jpg&quot; alt=&quot; 我的述职报告 &quot;&gt;&lt;/p&gt;
&lt;p&gt;对! 你能看到, 我在”写文档”上”浪费了”大量的时间. 当然,这是源于领导的安排.&lt;/p&gt;
&lt;h1 id=&quot;事故的缘由&quot;&gt;&lt;a href=&quot;#事故的缘由&quot; class=&quot;headerlink&quot; title=&quot;事故的缘由&quot;&gt;&lt;/a&gt;事故的缘由&lt;/h1&gt;&lt;p&gt;承担了不该承担的任务,然而你做的事情,他总能挑出刺来.&lt;br&gt;什么是事件系统,是一个以客服/运营为起点,专门针对于运维,用来客服/运营人员针对于线上问题提交问题给运维的一个系统.&lt;br&gt;这个系统估计大型的公司才会有.&lt;br&gt;而我为什么又很气愤了?&lt;br&gt;有没有想过一个场景, 一个不参与到部门下面具体的工作的技术总监, 一个不懂代码的总监, 一个只会把上面要求任务,转手就丢给下属的总监,对于这样的一个环境来说.&lt;br&gt;我想,你肯定你同样会很痛苦.&lt;/p&gt;
&lt;p&gt;妈妈说: 对于一个对工作付出了心血和劳动的人来说,及时他做的不完美,或者他完全是错的. 你也不要觉得他做的一文不值,因为这里面有他的心血.&lt;/p&gt;
&lt;h1 id=&quot;我想说的话&quot;&gt;&lt;a href=&quot;#我想说的话&quot; class=&quot;headerlink&quot; title=&quot;我想说的话&quot;&gt;&lt;/a&gt;我想说的话&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;人人都需要一面镜子&lt;br&gt;  人非圣贤,孰能无过. 所以不管什么时候,你都需要能有一面镜子,站在对面,能时刻审视自己.&lt;br&gt;  换位思考,或许能更好的说明问题.&lt;br&gt;  妈妈说: 当我们需要交朋友和别人谈话的时候, 首先是要谈别人感兴趣的事情.&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;什么是以身作则&lt;br&gt;  感谢我的第一份领导,&lt;code&gt;东信&lt;/code&gt;的彭工. 他教我,什么是”树立标杆,以身作则”,别人不愿意的事情,你要”先做”.&lt;br&gt;  所以之后,一直到现在,我都做得比别人”多”, 也让自己参与到每一件事情中.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;什么是言行合一&lt;br&gt;  以行践言,知行合一. 对于从你口中说过的每一句话, 那都是一个承若. 你若做不到, 你可以不说. 但不要轻易的说出口.&lt;/p&gt;
    
    </summary>
    
      <category term="other" scheme="https://yoncan.github.io/categories/other/"/>
    
    
      <category term="other" scheme="https://yoncan.github.io/tags/other/"/>
    
  </entry>
  
  <entry>
    <title>python itertools模块小结</title>
    <link href="https://yoncan.github.io/blog/2016/12/python-itertools.html"/>
    <id>https://yoncan.github.io/blog/2016/12/python-itertools.html</id>
    <published>2016-12-30T01:37:36.000Z</published>
    <updated>2017-01-09T15:31:51.639Z</updated>
    
    <content type="html"><![CDATA[<h1 id="itertools-包含的所有方法"><a href="#itertools-包含的所有方法" class="headerlink" title="itertools 包含的所有方法"></a>itertools 包含的所有方法</h1><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line">count([n]) --&gt; n, n+1, n+2, ...</div><div class="line">cycle(p) --&gt; p0, p1, ... plast, p0, p1, ...</div><div class="line">repeat(elem [,n]) --&gt; elem, elem, elem, ... endlessly or up to n times</div><div class="line"></div><div class="line">Iterators terminating on the shortest input sequence:</div><div class="line">chain(p, q, ...) --&gt; p0, p1, ... plast, q0, q1, ... </div><div class="line">compress(data, selectors) --&gt; (d[0] if s[0]), (d[1] if s[1]), ...</div><div class="line">dropwhile(pred, seq) --&gt; seq[n], seq[n+1], starting when pred fails</div><div class="line">groupby(iterable[, keyfunc]) --&gt; sub-iterators grouped by value of keyfunc(v)</div><div class="line">ifilter(pred, seq) --&gt; elements of seq where pred(elem) is True</div><div class="line">ifilterfalse(pred, seq) --&gt; elements of seq where pred(elem) is False</div><div class="line">islice(seq, [start,] stop [, step]) --&gt; elements from</div><div class="line">       seq[start:stop:step]</div><div class="line">imap(fun, p, q, ...) --&gt; fun(p0, q0), fun(p1, q1), ...</div><div class="line">starmap(fun, seq) --&gt; fun(*seq[0]), fun(*seq[1]), ...</div><div class="line">tee(it, n=2) --&gt; (it1, it2 , ... itn) splits one iterator into n</div><div class="line">takewhile(pred, seq) --&gt; seq[0], seq[1], until pred fails</div><div class="line">izip(p, q, ...) --&gt; (p[0], q[0]), (p[1], q[1]), ... </div><div class="line">izip_longest(p, q, ...) --&gt; (p[0], q[0]), (p[1], q[1]), ... </div><div class="line"></div><div class="line">Combinatoric generators:</div><div class="line">product(p, q, ... [repeat=1]) --&gt; cartesian product</div><div class="line">permutations(p[, r])</div><div class="line">combinations(p, r)</div><div class="line">combinations_with_replacement(p, r)</div></pre></td></tr></table></figure>
<h1 id="第一部分"><a href="#第一部分" class="headerlink" title="第一部分"></a>第一部分</h1><h2 id="itertools-count"><a href="#itertools-count" class="headerlink" title="itertools.count"></a>itertools.count</h2><p>创建一个迭代器，生成从n开始的连续整数，如果忽略n，则从0开始计算（注意：此迭代器不支持长整数）<br>如果超出了sys.maxint，计数器将溢出并继续从-sys.maxint-1开始计算。</p>
<p><strong>定义</strong></p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">count</span><span class="params">(firstval=<span class="number">0</span>, step=<span class="number">1</span>)</span>:</span></div><div class="line">    x = firstval</div><div class="line">    <span class="keyword">while</span> <span class="number">1</span>:</div><div class="line">        <span class="keyword">yield</span> x</div><div class="line">        x += step</div></pre></td></tr></table></figure>
<p><strong>使用</strong></p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">In [<span class="number">12</span>]: <span class="keyword">for</span> i <span class="keyword">in</span> itertools.izip(count(<span class="number">1</span>), [<span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>]):</div><div class="line">   ....:     print(i)</div><div class="line">   ....:     </div><div class="line">(<span class="number">1</span>, <span class="string">'a'</span>)</div><div class="line">(<span class="number">2</span>, <span class="string">'b'</span>)</div><div class="line">(<span class="number">3</span>, <span class="string">'c'</span>)</div></pre></td></tr></table></figure>
<hr>
<h2 id="itertools-cycle"><a href="#itertools-cycle" class="headerlink" title="itertools.cycle"></a>itertools.cycle</h2><p>创建一个迭代器，对iterable中的元素反复执行循环操作，内部会生成iterable中的元素的一个副本，此副本用于返回循环中的重复项.<br><strong>定义</strong><br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">cycle</span><span class="params">(iterable)</span>:</span></div><div class="line">    <span class="comment"># cycle('ABCD') --&gt; A B C D A B C D A B C D ...</span></div><div class="line">    saved = []</div><div class="line">    <span class="keyword">for</span> element <span class="keyword">in</span> iterable:</div><div class="line">        <span class="keyword">yield</span> element</div><div class="line">        saved.append(element)</div><div class="line">    <span class="keyword">while</span> saved:</div><div class="line">        <span class="keyword">for</span> element <span class="keyword">in</span> saved:</div><div class="line">            <span class="keyword">yield</span> element</div></pre></td></tr></table></figure></p>
<p><strong>使用</strong><br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">In [<span class="number">10</span>]: <span class="keyword">for</span> item <span class="keyword">in</span> itertools.cycle([<span class="string">'a'</span>,<span class="string">'b'</span>, <span class="string">'c'</span>]):</div><div class="line">   ....:     i += <span class="number">1</span></div><div class="line">   ....:     <span class="keyword">if</span> i == <span class="number">10</span>:</div><div class="line">   ....:         <span class="keyword">break</span></div><div class="line">   ....:     print(i, item)</div><div class="line">   ....:     </div><div class="line">(<span class="number">1</span>, <span class="string">'a'</span>)</div><div class="line">(<span class="number">2</span>, <span class="string">'b'</span>)</div><div class="line">(<span class="number">3</span>, <span class="string">'c'</span>)</div><div class="line">(<span class="number">4</span>, <span class="string">'a'</span>)</div><div class="line">(<span class="number">5</span>, <span class="string">'b'</span>)</div><div class="line">(<span class="number">6</span>, <span class="string">'c'</span>)</div><div class="line">(<span class="number">7</span>, <span class="string">'a'</span>)</div><div class="line">(<span class="number">8</span>, <span class="string">'b'</span>)</div><div class="line">(<span class="number">9</span>, <span class="string">'c'</span>)</div></pre></td></tr></table></figure></p>
<hr>
<a id="more"></a>
<h2 id="itertools-repeat"><a href="#itertools-repeat" class="headerlink" title="itertools.repeat"></a>itertools.repeat</h2><p>创建一个迭代器，重复生成object，times（如果已提供）指定重复计数，如果未提供times，将无止尽返回该对象。</p>
<p><strong>定义</strong><br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">repeat</span><span class="params">(object, times=None)</span>:</span></div><div class="line">    <span class="comment"># repeat(10, 3) --&gt; 10 10 10</span></div><div class="line">    <span class="keyword">if</span> times <span class="keyword">is</span> <span class="keyword">None</span>:</div><div class="line">        <span class="keyword">while</span> <span class="keyword">True</span>:</div><div class="line">            <span class="keyword">yield</span> object</div><div class="line">    <span class="keyword">else</span>:</div><div class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> xrange(times):</div><div class="line">            <span class="keyword">yield</span> object</div></pre></td></tr></table></figure></p>
<p><strong>使用</strong></p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">In [<span class="number">14</span>]: <span class="keyword">for</span> i <span class="keyword">in</span> itertools.repeat(<span class="string">'over-and-over'</span>, <span class="number">5</span>):</div><div class="line">   ....:     print(i)</div><div class="line">   ....:     </div><div class="line">over-<span class="keyword">and</span>-over</div><div class="line">over-<span class="keyword">and</span>-over</div><div class="line">over-<span class="keyword">and</span>-over</div><div class="line">over-<span class="keyword">and</span>-over</div><div class="line">over-<span class="keyword">and</span>-over</div></pre></td></tr></table></figure>
<hr>
<h1 id="第二部分"><a href="#第二部分" class="headerlink" title="第二部分"></a>第二部分</h1><h2 id="itertools-chain"><a href="#itertools-chain" class="headerlink" title="itertools.chain"></a>itertools.chain</h2><p>将多个迭代器作为参数, 但只返回单个迭代器, 它产生所有参数迭代器的内容, 就好像他们是来自于一个单一的序列.</p>
<p><strong>定义</strong></p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">chain</span><span class="params">(*iterables)</span>:</span></div><div class="line">    <span class="comment"># chain('ABC', 'DEF') --&gt; A B C D E F</span></div><div class="line">    <span class="keyword">for</span> it <span class="keyword">in</span> iterables:</div><div class="line">        <span class="keyword">for</span> element <span class="keyword">in</span> it:</div><div class="line">            <span class="keyword">yield</span> element</div></pre></td></tr></table></figure>
<p><strong>使用</strong></p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line">In [<span class="number">16</span>]: <span class="keyword">for</span> i <span class="keyword">in</span> itertools.chain([<span class="number">1</span>,<span class="number">2</span>], [<span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>]):     </div><div class="line">   ....:     print(i)</div><div class="line">   ....:     </div><div class="line"><span class="number">1</span></div><div class="line"><span class="number">2</span></div><div class="line">a</div><div class="line">b</div><div class="line">c</div><div class="line"></div><div class="line">  </div><div class="line">In [<span class="number">19</span>]: <span class="function"><span class="keyword">def</span> <span class="title">listdir</span><span class="params">(func, items)</span>:</span></div><div class="line">   ....:     <span class="keyword">return</span> itertools.chain.from_iterable(itertools.imap(func, items))</div><div class="line">   </div><div class="line">In [<span class="number">20</span>]: list(listdir(os.listdir, <span class="string">'.'</span>))</div><div class="line">Out[<span class="number">20</span>]: </div><div class="line">[<span class="string">'.bash_logout'</span>,</div><div class="line"> <span class="string">'.bash_profile'</span>,</div><div class="line"> <span class="string">'.bashrc'</span>,</div><div class="line"> <span class="string">'.cshrc'</span>,</div><div class="line"> <span class="string">'.tcshrc'</span>,</div><div class="line"> <span class="string">'.bash_history'</span>,</div><div class="line"> <span class="string">'.pki'</span>,</div><div class="line">    ....</div><div class="line"> <span class="string">'.my.cnf'</span>,</div><div class="line"> <span class="string">'_temp'</span>]</div></pre></td></tr></table></figure>
<hr>
<h2 id="itertools-compress"><a href="#itertools-compress" class="headerlink" title="itertools.compress"></a>itertools.compress</h2><p>提供一个选择列表，对原始数据进行筛选</p>
<p><strong>定义</strong><br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">compress</span><span class="params">(data, selectors)</span>:</span></div><div class="line">    <span class="comment"># compress('ABCDEF', [1,0,1,0,1,1]) --&gt; A C E F</span></div><div class="line">    <span class="keyword">return</span> (d <span class="keyword">for</span> d, s <span class="keyword">in</span> izip(data, selectors) <span class="keyword">if</span> s)</div></pre></td></tr></table></figure></p>
<p><strong>使用</strong><br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">In [<span class="number">23</span>]: list(itertools.compress(<span class="string">'ABCDEFG'</span>, [<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>]))    </div><div class="line">Out[<span class="number">23</span>]: [<span class="string">'A'</span>, <span class="string">'D'</span>, <span class="string">'E'</span>, <span class="string">'F'</span>]</div></pre></td></tr></table></figure></p>
<hr>
<h2 id="itertools-dropwhile-predicate-iterable"><a href="#itertools-dropwhile-predicate-iterable" class="headerlink" title="itertools.dropwhile(predicate, iterable)"></a>itertools.dropwhile(predicate, iterable)</h2><p>创建一个迭代器，只要函数predicate(item)为True，就丢弃iterable中的项，如果predicate返回False，就会生成iterable中的项和所有后续项。</p>
<p>即：在条件为false之后的第一次, 返回迭代器中剩下来的项(包括当前项).</p>
<p><strong>定义</strong><br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">dropwhile</span><span class="params">(predicate, iterable)</span>:</span></div><div class="line">    <span class="comment"># dropwhile(lambda x: x&lt;5, [1,4,6,4,1]) --&gt; 6 4 1</span></div><div class="line">    iterable = iter(iterable)</div><div class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> iterable:</div><div class="line">        <span class="keyword">if</span> <span class="keyword">not</span> predicate(x):</div><div class="line">            <span class="keyword">yield</span> x</div><div class="line">            <span class="keyword">break</span></div><div class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> iterable:</div><div class="line">        <span class="keyword">yield</span> x</div></pre></td></tr></table></figure></p>
<p><strong>使用</strong><br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">In [<span class="number">30</span>]: list(itertools.dropwhile(<span class="keyword">lambda</span> x: x&lt;<span class="number">1</span>, [<span class="number">-1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">1</span>,<span class="number">-2</span>]))    </div><div class="line">Out[<span class="number">30</span>]: [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">1</span>, <span class="number">-2</span>]</div></pre></td></tr></table></figure></p>
<hr>
<h2 id="itertools-groupby-iterable-keyfunc"><a href="#itertools-groupby-iterable-keyfunc" class="headerlink" title="itertools.groupby(iterable[, keyfunc])"></a>itertools.groupby(iterable[, keyfunc])</h2><p>返回一个产生按照key进行分组后的值集合的迭代器.</p>
<p>如果iterable在多次连续迭代中生成了同一项，则会定义一个组，如果将此函数应用一个分类列表，那么分组将定义该列表中的所有唯一项，key（如果已提供）是一个函数，应用于每一项，如果此函数存在返回值，该值将用于后续项而不是该项本身进行比较，此函数返回的迭代器生成元素(key, group)，其中key是分组的键值，group是迭代器，生成组成该组的所有项。</p>
<p>即：按照keyfunc函数对序列每个元素执行后的结果分组(每个分组是一个迭代器), 返回这些分组的迭代器</p>
<p><strong>注意: 分组之前 iterable 需要是一个排序序列</strong></p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">In [<span class="number">38</span>]: qs = [&#123;<span class="string">'age'</span>: <span class="number">10</span>, <span class="string">'name'</span>: <span class="string">'yangcan'</span>&#125;,</div><div class="line"> &#123;<span class="string">'age'</span>: <span class="number">12</span>, <span class="string">'name'</span>: <span class="string">'xiaoyang'</span>&#125;,</div><div class="line"> &#123;<span class="string">'age'</span>: <span class="number">10</span>, <span class="string">'name'</span>: <span class="string">'xx'</span>&#125;,</div><div class="line"> &#123;<span class="string">'age'</span>: <span class="number">13</span>, <span class="string">'name'</span>: <span class="string">'lisi'</span>&#125;]</div><div class="line"> </div><div class="line">In [<span class="number">40</span>]: <span class="keyword">for</span> name, group <span class="keyword">in</span> itertools.groupby(sorted(qs), <span class="keyword">lambda</span> x: x[<span class="string">'age'</span>]):  </div><div class="line">    print(name, list(group))</div><div class="line">   ....:     </div><div class="line">(<span class="number">10</span>, [&#123;<span class="string">'age'</span>: <span class="number">10</span>, <span class="string">'name'</span>: <span class="string">'xx'</span>&#125;, &#123;<span class="string">'age'</span>: <span class="number">10</span>, <span class="string">'name'</span>: <span class="string">'yangcan'</span>&#125;])</div><div class="line">(<span class="number">12</span>, [&#123;<span class="string">'age'</span>: <span class="number">12</span>, <span class="string">'name'</span>: <span class="string">'xiaoyang'</span>&#125;])</div><div class="line">(<span class="number">13</span>, [&#123;<span class="string">'age'</span>: <span class="number">13</span>, <span class="string">'name'</span>: <span class="string">'lisi'</span>&#125;])</div></pre></td></tr></table></figure>
<p>使用operator.itemgetter<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">In [<span class="number">43</span>]: <span class="keyword">from</span> operator <span class="keyword">import</span> itemgetter</div><div class="line">In [<span class="number">44</span>]: <span class="keyword">for</span> name, group <span class="keyword">in</span> itertools.groupby(sorted(qs), itemgetter(<span class="string">'age'</span>)):</div><div class="line">    print(name, list(group))</div><div class="line">   ....:     </div><div class="line">(<span class="number">10</span>, [&#123;<span class="string">'age'</span>: <span class="number">10</span>, <span class="string">'name'</span>: <span class="string">'xx'</span>&#125;, &#123;<span class="string">'age'</span>: <span class="number">10</span>, <span class="string">'name'</span>: <span class="string">'yangcan'</span>&#125;])</div><div class="line">(<span class="number">12</span>, [&#123;<span class="string">'age'</span>: <span class="number">12</span>, <span class="string">'name'</span>: <span class="string">'xiaoyang'</span>&#125;])</div><div class="line">(<span class="number">13</span>, [&#123;<span class="string">'age'</span>: <span class="number">13</span>, <span class="string">'name'</span>: <span class="string">'lisi'</span>&#125;])</div></pre></td></tr></table></figure></p>
<h1 id="TODO-未完待续-…"><a href="#TODO-未完待续-…" class="headerlink" title="TODO 未完待续 …"></a>TODO 未完待续 …</h1>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;itertools-包含的所有方法&quot;&gt;&lt;a href=&quot;#itertools-包含的所有方法&quot; class=&quot;headerlink&quot; title=&quot;itertools 包含的所有方法&quot;&gt;&lt;/a&gt;itertools 包含的所有方法&lt;/h1&gt;&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;count([n]) --&amp;gt; n, n+1, n+2, ...&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;cycle(p) --&amp;gt; p0, p1, ... plast, p0, p1, ...&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;repeat(elem [,n]) --&amp;gt; elem, elem, elem, ... endlessly or up to n times&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Iterators terminating on the shortest input sequence:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;chain(p, q, ...) --&amp;gt; p0, p1, ... plast, q0, q1, ... &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;compress(data, selectors) --&amp;gt; (d[0] if s[0]), (d[1] if s[1]), ...&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;dropwhile(pred, seq) --&amp;gt; seq[n], seq[n+1], starting when pred fails&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;groupby(iterable[, keyfunc]) --&amp;gt; sub-iterators grouped by value of keyfunc(v)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;ifilter(pred, seq) --&amp;gt; elements of seq where pred(elem) is True&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;ifilterfalse(pred, seq) --&amp;gt; elements of seq where pred(elem) is False&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;islice(seq, [start,] stop [, step]) --&amp;gt; elements from&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;       seq[start:stop:step]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;imap(fun, p, q, ...) --&amp;gt; fun(p0, q0), fun(p1, q1), ...&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;starmap(fun, seq) --&amp;gt; fun(*seq[0]), fun(*seq[1]), ...&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;tee(it, n=2) --&amp;gt; (it1, it2 , ... itn) splits one iterator into n&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;takewhile(pred, seq) --&amp;gt; seq[0], seq[1], until pred fails&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;izip(p, q, ...) --&amp;gt; (p[0], q[0]), (p[1], q[1]), ... &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;izip_longest(p, q, ...) --&amp;gt; (p[0], q[0]), (p[1], q[1]), ... &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Combinatoric generators:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;product(p, q, ... [repeat=1]) --&amp;gt; cartesian product&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;permutations(p[, r])&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;combinations(p, r)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;combinations_with_replacement(p, r)&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;第一部分&quot;&gt;&lt;a href=&quot;#第一部分&quot; class=&quot;headerlink&quot; title=&quot;第一部分&quot;&gt;&lt;/a&gt;第一部分&lt;/h1&gt;&lt;h2 id=&quot;itertools-count&quot;&gt;&lt;a href=&quot;#itertools-count&quot; class=&quot;headerlink&quot; title=&quot;itertools.count&quot;&gt;&lt;/a&gt;itertools.count&lt;/h2&gt;&lt;p&gt;创建一个迭代器，生成从n开始的连续整数，如果忽略n，则从0开始计算（注意：此迭代器不支持长整数）&lt;br&gt;如果超出了sys.maxint，计数器将溢出并继续从-sys.maxint-1开始计算。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;定义&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(firstval=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, step=&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&lt;/span&gt;:&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    x = firstval&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;yield&lt;/span&gt; x&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        x += step&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;使用&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;In [&lt;span class=&quot;number&quot;&gt;12&lt;/span&gt;]: &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; itertools.izip(count(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;), [&lt;span class=&quot;string&quot;&gt;&#39;a&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;b&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;c&#39;&lt;/span&gt;]):&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   ....:     print(i)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   ....:     &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;a&#39;&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;b&#39;&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;(&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;c&#39;&lt;/span&gt;)&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;hr&gt;
&lt;h2 id=&quot;itertools-cycle&quot;&gt;&lt;a href=&quot;#itertools-cycle&quot; class=&quot;headerlink&quot; title=&quot;itertools.cycle&quot;&gt;&lt;/a&gt;itertools.cycle&lt;/h2&gt;&lt;p&gt;创建一个迭代器，对iterable中的元素反复执行循环操作，内部会生成iterable中的元素的一个副本，此副本用于返回循环中的重复项.&lt;br&gt;&lt;strong&gt;定义&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;cycle&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(iterable)&lt;/span&gt;:&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;# cycle(&#39;ABCD&#39;) --&amp;gt; A B C D A B C D A B C D ...&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    saved = []&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; element &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; iterable:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;yield&lt;/span&gt; element&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        saved.append(element)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; saved:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; element &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; saved:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;yield&lt;/span&gt; element&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;使用&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;In [&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;]: &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; item &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; itertools.cycle([&lt;span class=&quot;string&quot;&gt;&#39;a&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;b&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;c&#39;&lt;/span&gt;]):&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   ....:     i += &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   ....:     &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; i == &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   ....:         &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   ....:     print(i, item)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   ....:     &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;a&#39;&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;b&#39;&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;(&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;c&#39;&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;(&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;a&#39;&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;(&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;b&#39;&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;(&lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;c&#39;&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;(&lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;a&#39;&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;(&lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;b&#39;&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;(&lt;span class=&quot;number&quot;&gt;9&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;c&#39;&lt;/span&gt;)&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;hr&gt;
    
    </summary>
    
      <category term="python" scheme="https://yoncan.github.io/categories/python/"/>
    
    
      <category term="python" scheme="https://yoncan.github.io/tags/python/"/>
    
      <category term="itertools" scheme="https://yoncan.github.io/tags/itertools/"/>
    
  </entry>
  
  <entry>
    <title>zabbix 使用微信发送报警信息</title>
    <link href="https://yoncan.github.io/blog/2016/12/zabbix-weixin-alert.html"/>
    <id>https://yoncan.github.io/blog/2016/12/zabbix-weixin-alert.html</id>
    <published>2016-12-29T14:56:06.000Z</published>
    <updated>2017-01-09T15:31:51.629Z</updated>
    
    <content type="html"><![CDATA[<h1 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h1><p>本脚本是利用微信的公众平台进行信息推送的发送报警信息的.<br>可以通过这个链接 <a href="https://qy.weixin.qq.com/" target="_blank" rel="external">微信平台</a> 了解, 可以注册团队,就没有时间限制了.</p>
<h1 id="代码文件"><a href="#代码文件" class="headerlink" title="代码文件"></a>代码文件</h1><blockquote><ul>
<li>需要安装requests模块,当初嫌麻烦,就直接使用的<code>requests</code>.</li>
<li>脚本中最后,需要修改成实际的信息.</li>
</ul>
</blockquote>
<a id="more"></a> 
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div><div class="line">193</div><div class="line">194</div><div class="line">195</div><div class="line">196</div><div class="line">197</div><div class="line">198</div><div class="line">199</div><div class="line">200</div><div class="line">201</div><div class="line">202</div><div class="line">203</div><div class="line">204</div><div class="line">205</div><div class="line">206</div><div class="line">207</div><div class="line">208</div><div class="line">209</div><div class="line">210</div><div class="line">211</div><div class="line">212</div><div class="line">213</div><div class="line">214</div><div class="line">215</div><div class="line">216</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#!/usr/bin/python</span></div><div class="line"><span class="comment"># -*- coding: utf-8 -*-</span></div><div class="line"><span class="comment"># Author: Ycan</span></div><div class="line"><span class="string">"""</span></div><div class="line">    微信报警</div><div class="line">"""</div><div class="line"> </div><div class="line"><span class="keyword">import</span> urllib3</div><div class="line"><span class="keyword">import</span> urllib</div><div class="line"><span class="keyword">import</span> sys</div><div class="line"><span class="keyword">import</span> json</div><div class="line"> </div><div class="line"> </div><div class="line"><span class="keyword">try</span>:</div><div class="line">    <span class="keyword">import</span> requests</div><div class="line"><span class="keyword">except</span>:</div><div class="line">    <span class="keyword">print</span> <span class="string">'request `requests` module'</span></div><div class="line">    sys.exit()</div><div class="line"> </div><div class="line"><span class="keyword">if</span> sys.getdefaultencoding() != <span class="string">'utf8'</span>:</div><div class="line">    reload(sys)</div><div class="line">    sys.setdefaultencoding(<span class="string">'utf8'</span>)</div><div class="line"> </div><div class="line">requests.packages.urllib3.disable_warnings()</div><div class="line"> </div><div class="line"> </div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">WeiXinExcept</span><span class="params">(Exception)</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, code=<span class="number">400</span>, message=<span class="string">u'Request Error'</span>, *args, **kwargs)</span>:</span></div><div class="line">        self.code = code</div><div class="line">        self.message = message</div><div class="line">        self.data = &#123;<span class="string">'code'</span>: self.code, <span class="string">'message'</span>: self.message&#125;</div><div class="line">        super(WeiXinExcept, self).__init__(*args, **kwargs)</div><div class="line"> </div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__str__</span><span class="params">(self)</span>:</span></div><div class="line">        <span class="keyword">return</span> repr(self.data)</div><div class="line"> </div><div class="line"> </div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">WeiXin</span><span class="params">(object)</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, corpid=<span class="string">''</span>, corpsecret=<span class="string">''</span>)</span>:</span></div><div class="line">        <span class="string">"""</span></div><div class="line">        微信接口</div><div class="line">        :param corpid: CorpID是企业号的标识，每个企业号拥有一个唯一的CorpID</div><div class="line">        :param corpsecret: Secret是管理组凭证密钥</div><div class="line">        """</div><div class="line">        self.corpid = corpid</div><div class="line">        self.corpsecret = corpsecret</div><div class="line">        self.urls = dict(</div><div class="line">            token=<span class="string">'https://qyapi.weixin.qq.com/cgi-bin/gettoken'</span>,</div><div class="line">            send_msg=<span class="string">'https://qyapi.weixin.qq.com/cgi-bin/message/send'</span>,</div><div class="line">            department_list=<span class="string">'https://qyapi.weixin.qq.com/cgi-bin/department/list'</span>,</div><div class="line">            user_list=<span class="string">'https://qyapi.weixin.qq.com/cgi-bin/user/simplelist'</span>,</div><div class="line">        )</div><div class="line">        self.headers = &#123;<span class="string">"Content-type"</span>: <span class="string">"application/x-www-form-urlencoded"</span>, <span class="string">"Accept"</span>: <span class="string">"text/plain"</span>&#125;</div><div class="line">        <span class="keyword">if</span> <span class="keyword">not</span> corpid <span class="keyword">or</span> <span class="keyword">not</span> corpsecret:</div><div class="line">            <span class="keyword">raise</span> WeiXinExcept(message=<span class="string">u'need CorpID and Secret'</span>)</div><div class="line"> </div><div class="line">        self.token = self.get_token()</div><div class="line"> </div><div class="line"> </div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_token</span><span class="params">(self)</span>:</span></div><div class="line">        <span class="string">"""</span></div><div class="line">        :return: token</div><div class="line">        """</div><div class="line">        token_url = self.urls.get(<span class="string">'token'</span>)</div><div class="line">        params = dict(corpid=self.corpid, corpsecret=self.corpsecret)</div><div class="line">        _token = requests.get(token_url, params=params)</div><div class="line"> </div><div class="line">        <span class="keyword">if</span> _token.ok <span class="keyword">and</span> _token.json().has_key(<span class="string">'access_token'</span>):</div><div class="line">            <span class="keyword">return</span> _token.json()[<span class="string">'access_token'</span>]</div><div class="line">        <span class="keyword">else</span>:</div><div class="line">            <span class="keyword">raise</span> WeiXinExcept(message=<span class="string">u'get token error!'</span>)</div><div class="line"> </div><div class="line"> </div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_department</span><span class="params">(self, department_name=None)</span>:</span></div><div class="line">        <span class="string">"""</span></div><div class="line">        :param department_name: 部门的名称</div><div class="line">        :return:</div><div class="line">        """</div><div class="line">        url = self.urls.get(<span class="string">'department_list'</span>)</div><div class="line">        params = dict(access_token=self.token)</div><div class="line">        r = requests.get(url, params=params)</div><div class="line">        <span class="keyword">if</span> self._check_request_status(r):</div><div class="line">            dept_list = r.json().get(<span class="string">'department'</span>, <span class="keyword">None</span>)</div><div class="line">            <span class="keyword">if</span> dept_list <span class="keyword">and</span> department_name <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">None</span>:</div><div class="line">                <span class="keyword">return</span> filter(<span class="keyword">lambda</span> x: x[<span class="string">'name'</span>] == department_name.decode(<span class="string">'utf8'</span>), dept_list)</div><div class="line">            <span class="keyword">else</span>:</div><div class="line">                <span class="keyword">return</span> dept_list</div><div class="line">        <span class="keyword">else</span>:</div><div class="line">            <span class="keyword">return</span> <span class="keyword">None</span></div><div class="line"> </div><div class="line"> </div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_department_members</span><span class="params">(self, department_id, fetch_child=<span class="number">1</span>, status=<span class="number">1</span>)</span>:</span></div><div class="line">        <span class="string">"""</span></div><div class="line">        :param department_id: 部门ID</div><div class="line">        :param fetch_child: 1/0：是否递归获取子部门下面的成员</div><div class="line">        :param status: 0获取全部员工，1获取已关注成员列表，2获取禁用成员列表，4获取未关注成员列表。status可叠加</div><div class="line">        :return: 返回部门成员的列表</div><div class="line">        """</div><div class="line">        params = dict(access_token=self.token, department_id=department_id, fetch_child=fetch_child, status=status)</div><div class="line">        r = requests.get(self.urls.get(<span class="string">'user_list'</span>), params=params)</div><div class="line">        <span class="keyword">if</span> self._check_request_status(r):</div><div class="line">            <span class="keyword">return</span> r.json().get(<span class="string">'userlist'</span>, <span class="keyword">None</span>)</div><div class="line">        <span class="keyword">else</span>:</div><div class="line">            <span class="keyword">return</span> <span class="keyword">None</span></div><div class="line"> </div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">send_msg_to_user</span><span class="params">(self, users=[], paryts=[], agentid=<span class="string">'0'</span>, msgtype=<span class="string">'text'</span>, content=<span class="string">''</span>, safe=<span class="string">'0'</span>)</span>:</span></div><div class="line">        <span class="string">"""</span></div><div class="line">        `发送信息到用户`</div><div class="line">        :param users: type `string` or list ,发送的用户ID,或者用户ID列表</div><div class="line">        :param paryts: type `string` or list ,发送的用户组ID,或者用户组ID列表</div><div class="line">        :param agentid: 企业应用的id，整型。可在应用的设置页面查看</div><div class="line">        :param msgtype: 消息类型，此时固定为：text</div><div class="line">        :param content: 消息内容</div><div class="line">        :param safe: 表示是否是保密消息，0表示否，1表示是，默认0</div><div class="line">        `发送的数据`</div><div class="line">        &#123;</div><div class="line">           "touser": "UserID1|UserID2|UserID3",</div><div class="line">           "toparty": " PartyID1 | PartyID2 ",</div><div class="line">           "totag": " TagID1 | TagID2 ",</div><div class="line">           "msgtype": "text",</div><div class="line">           "agentid": "1",</div><div class="line">           "text": &#123;</div><div class="line">               "content": "Holiday Request For Pony(http://xxxxx)"</div><div class="line">           &#125;,</div><div class="line">           "safe":"0"</div><div class="line">        &#125;</div><div class="line">        :return: True or False</div><div class="line">        """</div><div class="line"> </div><div class="line">        <span class="keyword">if</span> <span class="keyword">not</span> (users <span class="keyword">or</span> paryts):</div><div class="line">            <span class="keyword">raise</span> WeiXinExcept(message=<span class="string">u'users or paryts not null.'</span>)</div><div class="line"> </div><div class="line">        touser = <span class="string">'|'</span>.join(users)</div><div class="line">        toparty = <span class="string">'|'</span>.join(paryts)</div><div class="line">        _params = dict(</div><div class="line">            msgtype=msgtype,</div><div class="line">            agentid=agentid,</div><div class="line">            text=dict(content=content),</div><div class="line">            safe=safe</div><div class="line">        )</div><div class="line"> </div><div class="line">        <span class="keyword">if</span> touser: _params[<span class="string">'touser'</span>] = touser</div><div class="line">        <span class="keyword">if</span> toparty: _params[<span class="string">'toparty'</span>] = toparty</div><div class="line">        data = json.dumps(_params, ensure_ascii=<span class="keyword">False</span>).encode(<span class="string">'utf8'</span>)</div><div class="line">        url = self.urls.get(<span class="string">'send_msg'</span>) + <span class="string">'?access_token=%s'</span> % urllib.quote(self.token)</div><div class="line">        r = requests.post(url, data=data, headers=self.headers)</div><div class="line">        <span class="keyword">if</span> self._check_request_status(r):</div><div class="line">            <span class="keyword">return</span> <span class="keyword">True</span></div><div class="line"> </div><div class="line">        <span class="keyword">return</span> r.json() <span class="keyword">if</span> r.json() <span class="keyword">else</span> r.raise_for_status()</div><div class="line"> </div><div class="line"> </div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">_check_request_status</span><span class="params">(self, rq)</span>:</span></div><div class="line">        <span class="string">"""</span></div><div class="line">        :param request: 请求</div><div class="line">        :return: 如果情况没有错误,返回True, 否则返回False</div><div class="line">        """</div><div class="line">        <span class="keyword">try</span>:</div><div class="line">            <span class="keyword">if</span> rq.ok <span class="keyword">and</span> rq.json().get(<span class="string">'errcode'</span>) == <span class="number">0</span>:</div><div class="line">                <span class="keyword">return</span> <span class="keyword">True</span></div><div class="line">            <span class="keyword">else</span>:</div><div class="line">                <span class="keyword">return</span> <span class="keyword">False</span></div><div class="line">        <span class="keyword">except</span>:</div><div class="line">            <span class="keyword">return</span> <span class="keyword">False</span></div><div class="line"> </div><div class="line"> </div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">sendMsg</span><span class="params">(users=[], content=<span class="string">''</span>)</span>:</span></div><div class="line">    weixin = WeiXin(corpid=CorpID, corpsecret=Secret)</div><div class="line">    department_list = weixin.get_department(department_name=department_name)</div><div class="line">    <span class="keyword">if</span> department_list:</div><div class="line">        dept_id = department_list[<span class="number">0</span>][<span class="string">'id'</span>]</div><div class="line"> </div><div class="line">        user_list = weixin.get_department_members(dept_id)</div><div class="line">        <span class="keyword">if</span> user_list:</div><div class="line">            user_list_id = [x[<span class="string">'userid'</span>] <span class="keyword">for</span> x <span class="keyword">in</span> user_list]</div><div class="line"> </div><div class="line">            <span class="comment"># 筛选只关注了企业帐号的 userid</span></div><div class="line">            send_user_id = set(users).intersection(set(user_list_id))</div><div class="line"> </div><div class="line">            out_user_id = set(users).difference(set(user_list_id))</div><div class="line"> </div><div class="line">            <span class="keyword">if</span> send_user_id:</div><div class="line">                result = weixin.send_msg_to_user(users=send_user_id, content=content)</div><div class="line">                <span class="keyword">if</span> result <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">True</span>:</div><div class="line">                    <span class="keyword">print</span> result</div><div class="line"> </div><div class="line">                <span class="keyword">if</span> out_user_id:</div><div class="line">                    print(<span class="string">u'指定的接收人[%s]的ID没有关注企业帐号.'</span> % <span class="string">','</span>.join(out_user_id))</div><div class="line">            <span class="keyword">else</span>:</div><div class="line">                <span class="keyword">raise</span> WeiXinExcept(message=<span class="string">u'指定的接收人[%s]的ID没有关注企业帐号.'</span> % <span class="string">','</span>.join(user_list))</div><div class="line">        <span class="keyword">else</span>:</div><div class="line">            <span class="keyword">raise</span> WeiXinExcept(message=<span class="string">u'部门[%s]下,没有可用的成员列表'</span> % department_name)</div><div class="line">    <span class="keyword">else</span>:</div><div class="line">        <span class="keyword">raise</span> WeiXinExcept(message=<span class="string">u'不能获取到部门[%s]列表,请检查.'</span> % department_name)</div><div class="line"> </div><div class="line"> </div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    <span class="comment"># 开发者的信息</span></div><div class="line">	<span class="comment"># 需要修改成实际的帐号以及agentid信息</span></div><div class="line">    CorpID = <span class="string">'xx'</span></div><div class="line">    Secret = <span class="string">'xx'</span></div><div class="line">    <span class="comment"># 发送的user在哪个部门</span></div><div class="line">    department_name = <span class="string">'YunWei'</span></div><div class="line">    <span class="comment"># 应用ID</span></div><div class="line">    agentid = <span class="number">0</span></div><div class="line"> </div><div class="line">    <span class="keyword">if</span> len(sys.argv) &lt; <span class="number">3</span>:</div><div class="line">        help = <span class="string">"""</span></div><div class="line">            usge: %s &lt;userid,userid...&gt; &lt;subject&gt; [content]</div><div class="line">            """ % sys.argv[<span class="number">0</span>]</div><div class="line">        <span class="keyword">print</span> help</div><div class="line">        sys.exit()</div><div class="line"> </div><div class="line">    userid_list = sys.argv[<span class="number">1</span>].split(<span class="string">','</span>)</div><div class="line">    content = <span class="string">'\n'</span>.join(sys.argv[<span class="number">2</span>:])</div><div class="line">    sendMsg(users=userid_list, content=content)</div></pre></td></tr></table></figure>
<h1 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h1><p><code>907310009</code>为你添加用户时指定的帐号.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"># python weixin.py 907310009 &quot;你好,测试微信报警&quot;</div></pre></td></tr></table></figure></p>
<img src="/assert/images/2016-12-29-zabbix-weixin-alert/zabbix-weixin-alert-01.png" title="接收信息的显示">
<h1 id="怎样查看agentid-和-Secret-等信息"><a href="#怎样查看agentid-和-Secret-等信息" class="headerlink" title="怎样查看agentid 和 Secret 等信息"></a>怎样查看agentid 和 Secret 等信息</h1><p>下面用图说明吧,太详细的在后台自己可以琢磨琢磨</p>
<img src="/assert/images/2016-12-29-zabbix-weixin-alert/zabbix-weixin-alert-02.jpg" title="应用ID查看">
<img src="/assert/images/2016-12-29-zabbix-weixin-alert/zabbix-weixin-alert-03.png" title="分组和用户ID">
<img src="/assert/images/2016-12-29-zabbix-weixin-alert/zabbix-weixin-alert-04.png" title="应用的授权信息CorpID和Secret">
<img src="/assert/images/2016-12-29-zabbix-weixin-alert/zabbix-weixin-alert-05.png" title="应用的授权信息CorpID和Secret">
<h1 id="后续工作-TODO"><a href="#后续工作-TODO" class="headerlink" title="后续工作 TODO"></a>后续工作 TODO</h1><ul>
<li>增加信息发送频率的限制<br>  这个应用的场景是,在有大量报警的前提下,为了不在短时间范围内一下收到太多短信轰炸,做一个限制多少分钟内发送指定的接收人不超过多少条信息.<br>  这个功能其实已经用shell处理好了,只是python这段代码没有事件修改.</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;说明&quot;&gt;&lt;a href=&quot;#说明&quot; class=&quot;headerlink&quot; title=&quot;说明&quot;&gt;&lt;/a&gt;说明&lt;/h1&gt;&lt;p&gt;本脚本是利用微信的公众平台进行信息推送的发送报警信息的.&lt;br&gt;可以通过这个链接 &lt;a href=&quot;https://qy.weixin.qq.com/&quot;&gt;微信平台&lt;/a&gt; 了解, 可以注册团队,就没有时间限制了.&lt;/p&gt;
&lt;h1 id=&quot;代码文件&quot;&gt;&lt;a href=&quot;#代码文件&quot; class=&quot;headerlink&quot; title=&quot;代码文件&quot;&gt;&lt;/a&gt;代码文件&lt;/h1&gt;&lt;blockquote&gt;&lt;ul&gt;
&lt;li&gt;需要安装requests模块,当初嫌麻烦,就直接使用的&lt;code&gt;requests&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;脚本中最后,需要修改成实际的信息.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="zabbix" scheme="https://yoncan.github.io/categories/zabbix/"/>
    
    
      <category term="python" scheme="https://yoncan.github.io/tags/python/"/>
    
      <category term="zabbix" scheme="https://yoncan.github.io/tags/zabbix/"/>
    
  </entry>
  
  <entry>
    <title>在ansbile的setup上的一些扩展功能</title>
    <link href="https://yoncan.github.io/blog/2016/12/ansible-extend-setup.html"/>
    <id>https://yoncan.github.io/blog/2016/12/ansible-extend-setup.html</id>
    <published>2016-12-29T14:18:47.000Z</published>
    <updated>2017-01-09T15:31:51.629Z</updated>
    
    <content type="html"><![CDATA[<h1 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h1><p>为了配合做的资产信息搜集, 直接在setup模块上加上了raid卡,底层的物理磁盘,内存等相关信息.</p>
<h1 id="一些改变"><a href="#一些改变" class="headerlink" title="一些改变"></a>一些改变</h1><ul>
<li>取消了原本关于磁盘单位的自动格式,改为磁盘的最大单位支持到GB,如果需要和原生一下,那在代码文件的 <code>314-317</code> 行注释</li>
</ul>
<h1 id="依赖说明"><a href="#依赖说明" class="headerlink" title="依赖说明"></a>依赖说明</h1><p>底层的raid和磁盘信息收集需要安装<code>MegaCli64</code>包,关于安装方法,自行解决.<br>另外关于raid级别,怎么推算成raid5或者raid1+0的. 因为我线上只有这2种,所以如果需要的话,自行解决raid级别的判断.</p>
<h1 id="代码文件"><a href="#代码文件" class="headerlink" title="代码文件"></a>代码文件</h1><p>把下面的代码保存为扩展模块,比如文件名setupex.py, 放在你<code>ansible.cfg</code>配置文件中<code>library</code>定义的路径下.</p>
<a id="more"></a>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div><div class="line">193</div><div class="line">194</div><div class="line">195</div><div class="line">196</div><div class="line">197</div><div class="line">198</div><div class="line">199</div><div class="line">200</div><div class="line">201</div><div class="line">202</div><div class="line">203</div><div class="line">204</div><div class="line">205</div><div class="line">206</div><div class="line">207</div><div class="line">208</div><div class="line">209</div><div class="line">210</div><div class="line">211</div><div class="line">212</div><div class="line">213</div><div class="line">214</div><div class="line">215</div><div class="line">216</div><div class="line">217</div><div class="line">218</div><div class="line">219</div><div class="line">220</div><div class="line">221</div><div class="line">222</div><div class="line">223</div><div class="line">224</div><div class="line">225</div><div class="line">226</div><div class="line">227</div><div class="line">228</div><div class="line">229</div><div class="line">230</div><div class="line">231</div><div class="line">232</div><div class="line">233</div><div class="line">234</div><div class="line">235</div><div class="line">236</div><div class="line">237</div><div class="line">238</div><div class="line">239</div><div class="line">240</div><div class="line">241</div><div class="line">242</div><div class="line">243</div><div class="line">244</div><div class="line">245</div><div class="line">246</div><div class="line">247</div><div class="line">248</div><div class="line">249</div><div class="line">250</div><div class="line">251</div><div class="line">252</div><div class="line">253</div><div class="line">254</div><div class="line">255</div><div class="line">256</div><div class="line">257</div><div class="line">258</div><div class="line">259</div><div class="line">260</div><div class="line">261</div><div class="line">262</div><div class="line">263</div><div class="line">264</div><div class="line">265</div><div class="line">266</div><div class="line">267</div><div class="line">268</div><div class="line">269</div><div class="line">270</div><div class="line">271</div><div class="line">272</div><div class="line">273</div><div class="line">274</div><div class="line">275</div><div class="line">276</div><div class="line">277</div><div class="line">278</div><div class="line">279</div><div class="line">280</div><div class="line">281</div><div class="line">282</div><div class="line">283</div><div class="line">284</div><div class="line">285</div><div class="line">286</div><div class="line">287</div><div class="line">288</div><div class="line">289</div><div class="line">290</div><div class="line">291</div><div class="line">292</div><div class="line">293</div><div class="line">294</div><div class="line">295</div><div class="line">296</div><div class="line">297</div><div class="line">298</div><div class="line">299</div><div class="line">300</div><div class="line">301</div><div class="line">302</div><div class="line">303</div><div class="line">304</div><div class="line">305</div><div class="line">306</div><div class="line">307</div><div class="line">308</div><div class="line">309</div><div class="line">310</div><div class="line">311</div><div class="line">312</div><div class="line">313</div><div class="line">314</div><div class="line">315</div><div class="line">316</div><div class="line">317</div><div class="line">318</div><div class="line">319</div><div class="line">320</div><div class="line">321</div><div class="line">322</div><div class="line">323</div><div class="line">324</div><div class="line">325</div><div class="line">326</div><div class="line">327</div><div class="line">328</div><div class="line">329</div><div class="line">330</div><div class="line">331</div><div class="line">332</div><div class="line">333</div><div class="line">334</div><div class="line">335</div><div class="line">336</div><div class="line">337</div><div class="line">338</div><div class="line">339</div><div class="line">340</div><div class="line">341</div><div class="line">342</div><div class="line">343</div><div class="line">344</div><div class="line">345</div><div class="line">346</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#!/usr/bin/python</span></div><div class="line"><span class="comment"># -*- coding: utf-8 -*-</span></div><div class="line"> </div><div class="line"><span class="comment"># (c) 2012, Michael DeHaan &lt;michael.dehaan@gmail.com&gt;</span></div><div class="line"><span class="comment">#</span></div><div class="line"><span class="comment"># This file is part of Ansible</span></div><div class="line"><span class="comment">#</span></div><div class="line"><span class="comment"># Ansible is free software: you can redistribute it and/or modify</span></div><div class="line"><span class="comment"># it under the terms of the GNU General Public License as published by</span></div><div class="line"><span class="comment"># the Free Software Foundation, either version 3 of the License, or</span></div><div class="line"><span class="comment"># (at your option) any later version.</span></div><div class="line"><span class="comment">#</span></div><div class="line"><span class="comment"># Ansible is distributed in the hope that it will be useful,</span></div><div class="line"><span class="comment"># but WITHOUT ANY WARRANTY; without even the implied warranty of</span></div><div class="line"><span class="comment"># MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span></div><div class="line"><span class="comment"># GNU General Public License for more details.</span></div><div class="line"><span class="comment">#</span></div><div class="line"><span class="comment"># You should have received a copy of the GNU General Public License</span></div><div class="line"><span class="comment"># along with Ansible.  If not, see &lt;http://www.gnu.org/licenses/&gt;.</span></div><div class="line"> </div><div class="line">DOCUMENTATION = <span class="string">'''</span></div><div class="line">---</div><div class="line">module: setup</div><div class="line">version_added: historical</div><div class="line">short_description: Gathers facts about remote hosts</div><div class="line">options:</div><div class="line">    gather_subset:</div><div class="line">        version_added: "2.1"</div><div class="line">        description:</div><div class="line">            - "if supplied, restrict the additional facts collected to the given subset.</div><div class="line">              Possible values: all, hardware, network, virtual, ohai, and</div><div class="line">              facter Can specify a list of values to specify a larger subset.</div><div class="line">              Values can also be used with an initial C(!) to specify that</div><div class="line">              that specific subset should not be collected.  For instance:</div><div class="line">              !hardware, !network, !virtual, !ohai, !facter.  Note that a few</div><div class="line">              facts are always collected.  Use the filter parameter if you do</div><div class="line">              not want to display those."</div><div class="line">        required: false</div><div class="line">        default: 'all'</div><div class="line">    filter:</div><div class="line">        version_added: "1.1"</div><div class="line">        description:</div><div class="line">            - if supplied, only return facts that match this shell-style (fnmatch) wildcard.</div><div class="line">        required: false</div><div class="line">        default: '*'</div><div class="line">    fact_path:</div><div class="line">        version_added: "1.3"</div><div class="line">        description:</div><div class="line">            - path used for local ansible facts (*.fact) - files in this dir</div><div class="line">              will be run (if executable) and their results be added to ansible_local facts</div><div class="line">              if a file is not executable it is read. Check notes for Windows options. (from 2.1 on)</div><div class="line">              File/results format can be json or ini-format</div><div class="line">        required: false</div><div class="line">        default: '/etc/ansible/facts.d'</div><div class="line">description:</div><div class="line">     - This module is automatically called by playbooks to gather useful</div><div class="line">       variables about remote hosts that can be used in playbooks. It can also be</div><div class="line">       executed directly by C(/usr/bin/ansible) to check what variables are</div><div class="line">       available to a host. Ansible provides many I(facts) about the system,</div><div class="line">       automatically.</div><div class="line">notes:</div><div class="line">    - More ansible facts will be added with successive releases. If I(facter) or</div><div class="line">      I(ohai) are installed, variables from these programs will also be snapshotted</div><div class="line">      into the JSON file for usage in templating. These variables are prefixed</div><div class="line">      with C(facter_) and C(ohai_) so it's easy to tell their source. All variables are</div><div class="line">      bubbled up to the caller. Using the ansible facts and choosing to not</div><div class="line">      install I(facter) and I(ohai) means you can avoid Ruby-dependencies on your</div><div class="line">      remote systems. (See also M(facter) and M(ohai).)</div><div class="line">    - The filter option filters only the first level subkey below ansible_facts.</div><div class="line">    - If the target host is Windows, you will not currently have the ability to use</div><div class="line">      C(filter) as this is provided by a simpler implementation of the module.</div><div class="line">    - If the target host is Windows you can now use C(fact_path). Make sure that this path </div><div class="line">      exists on the target host. Files in this path MUST be PowerShell scripts (``*.ps1``) and </div><div class="line">      their output must be formattable in JSON (Ansible will take care of this). Test the </div><div class="line">      output of your scripts.</div><div class="line">      This option was added in Ansible 2.1.</div><div class="line">author:</div><div class="line">    - "Ansible Core Team"</div><div class="line">    - "Michael DeHaan"</div><div class="line">    - "David O'Brien @david_obrien davidobrien1985"</div><div class="line">'''</div><div class="line"> </div><div class="line">EXAMPLES = <span class="string">"""</span></div><div class="line"># Display facts from all hosts and store them indexed by I(hostname) at C(/tmp/facts).</div><div class="line">ansible all -m setup --tree /tmp/facts</div><div class="line"> </div><div class="line"># Display only facts regarding memory found by ansible on all hosts and output them.</div><div class="line">ansible all -m setup -a 'filter=ansible_*_mb'</div><div class="line"> </div><div class="line"># Display only facts returned by facter.</div><div class="line">ansible all -m setup -a 'filter=facter_*'</div><div class="line"> </div><div class="line"># Display only facts about certain interfaces.</div><div class="line">ansible all -m setup -a 'filter=ansible_eth[0-2]'</div><div class="line"> </div><div class="line"># Restrict additional gathered facts to network and virtual.</div><div class="line">ansible all -m setup -a 'gather_subset=network,virtual'</div><div class="line"> </div><div class="line"># Do not call puppet facter or ohai even if present.</div><div class="line">ansible all -m setup -a 'gather_subset=!facter,!ohai'</div><div class="line"> </div><div class="line"># Only collect the minimum amount of facts:</div><div class="line">ansible all -m setup -a 'gather_subset=!all'</div><div class="line"> </div><div class="line"># Display facts from Windows hosts with custom facts stored in C(C:\\custom_facts).</div><div class="line">ansible windows -m setup -a "fact_path='c:\\custom_facts'"</div><div class="line">"""</div><div class="line"> </div><div class="line"> </div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">DogoFacts</span><span class="params">(object)</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, is_virtual_type=False)</span>:</span></div><div class="line">        self.facts = dict()</div><div class="line">        self.level = &#123;</div><div class="line">            <span class="string">'RAID-5'</span>: [<span class="string">'Primary-5, Secondary-0, RAID Level Qualifier-3'</span>, <span class="string">'3'</span>, <span class="string">'1'</span>],</div><div class="line">            <span class="string">'RAID-1'</span>: [<span class="string">'Primary-1, Secondary-0, RAID Level Qualifier-0'</span>, <span class="string">'2'</span>, <span class="string">'1'</span>],</div><div class="line">            <span class="string">'RAID-10'</span>: [<span class="string">'Primary-1, Secondary-0, RAID Level Qualifier-0'</span>, <span class="string">'2'</span>, <span class="string">'2'</span>],</div><div class="line">            <span class="string">'RAID-0'</span>: [<span class="string">'Primary-0, Secondary-0, RAID Level Qualifier-0'</span>, <span class="string">'2'</span>, <span class="string">'1'</span>]</div><div class="line">        &#125;</div><div class="line"> </div><div class="line">        self.facts[<span class="string">'dogo_raid_level'</span>] = <span class="string">'NA'</span></div><div class="line">        self.facts[<span class="string">'dogo_disk_size'</span>] = <span class="string">'NA'</span></div><div class="line">        self.facts[<span class="string">'dogo_raid_disk'</span>] = []</div><div class="line">        self.facts[<span class="string">'dogo_memory_detail'</span>] = []</div><div class="line">        self.facts[<span class="string">'dogo_raid_info'</span>] = []</div><div class="line"> </div><div class="line">        <span class="keyword">if</span> is_virtual_type <span class="keyword">is</span> <span class="keyword">False</span>:</div><div class="line">            self.get_dogo_facts()</div><div class="line"> </div><div class="line"> </div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">populate</span><span class="params">(self)</span>:</span></div><div class="line">        cwd = os.getcwd()</div><div class="line">        <span class="keyword">try</span>:</div><div class="line">            <span class="keyword">return</span> self.facts</div><div class="line">        <span class="keyword">finally</span>:</div><div class="line">            clear_files = [os.path.join(cwd, <span class="string">'MegaSAS.log'</span>), os.path.join(cwd, <span class="string">'CmdTool.log'</span>)]</div><div class="line">            <span class="keyword">for</span> f <span class="keyword">in</span> clear_files:</div><div class="line">                <span class="keyword">if</span> os.path.isfile(f): os.remove(f)</div><div class="line"> </div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_dogo_facts</span><span class="params">(self)</span>:</span></div><div class="line">        <span class="string">""" 阵列级别</span></div><div class="line">        :return:</div><div class="line">        """</div><div class="line"> </div><div class="line">        MegaCli64_bin = <span class="string">'/opt/MegaRAID/MegaCli/MegaCli64'</span></div><div class="line">        dmidecode_bin = <span class="string">'/usr/sbin/dmidecode'</span></div><div class="line"> </div><div class="line">        cmd_info = []</div><div class="line">        <span class="keyword">if</span> os.path.exists(MegaCli64_bin):</div><div class="line">            cmd_info.extend([</div><div class="line">                dict(</div><div class="line">                    cmd=<span class="string">"%s -cfgdsply -aALL|egrep -i '^(Adapter:|Product Name:|Memory:|Serial No:)'"</span> % MegaCli64_bin,</div><div class="line">                    cb=self._raid_info_format</div><div class="line">                ),</div><div class="line">                dict(</div><div class="line">                    cmd=<span class="string">"%s -LDInfo -Lall -aALL|egrep -i '^(RAID Level|Size|Number Of Drives|Span Depth)'"</span> % MegaCli64_bin,</div><div class="line">                    cb=self._raid_level_format</div><div class="line">                ),</div><div class="line">                dict(</div><div class="line">                    cmd=<span class="string">"%s -PDList -aAll|egrep -i '^(Slot Number|PD Type|Raw Size|Device Firmware Level|Inquiry Data):'"</span> % MegaCli64_bin,</div><div class="line">                    cb=self._raid_disk_format</div><div class="line">                )])</div><div class="line"> </div><div class="line">        <span class="keyword">if</span> os.path.exists(dmidecode_bin):</div><div class="line">            cmd_info.append(dict(</div><div class="line">                cmd=<span class="string">'%s -t memory'</span> % dmidecode_bin,</div><div class="line">                cb=self._get_memory_format</div><div class="line">            ))</div><div class="line"> </div><div class="line">        <span class="keyword">for</span> c <span class="keyword">in</span> cmd_info:</div><div class="line">            cmd = c[<span class="string">'cmd'</span>]</div><div class="line">            (rc, out, err) = module.run_command(cmd, use_unsafe_shell=<span class="keyword">True</span>)</div><div class="line"> </div><div class="line">            <span class="keyword">if</span> rc == <span class="number">0</span>:</div><div class="line">                c[<span class="string">'cb'</span>](out)</div><div class="line"> </div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">_raid_info_format</span><span class="params">(self, data)</span>:</span></div><div class="line">        <span class="string">""" 阵列卡信息</span></div><div class="line">            Product Name: PERC H710 Mini</div><div class="line">            Memory: 512MB</div><div class="line">            Serial No: 3C801FE</div><div class="line">        :param data:</div><div class="line">        :return:</div><div class="line">        """</div><div class="line">        key = [<span class="string">'adapter'</span>, <span class="string">'name'</span>, <span class="string">'memory'</span>, <span class="string">'serial'</span>]</div><div class="line">        v = []</div><div class="line">        <span class="keyword">for</span> line <span class="keyword">in</span> data.splitlines():</div><div class="line">            v.append(line.split(<span class="string">': '</span>)[<span class="number">-1</span>].strip())</div><div class="line"> </div><div class="line">        self.facts[<span class="string">'dogo_raid_info'</span>].append(dict(zip(key, v)))</div><div class="line"> </div><div class="line"> </div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">_raid_level_format</span><span class="params">(self, data)</span>:</span></div><div class="line">        <span class="string">""" 阵列卡级别</span></div><div class="line">            RAID Level          : Primary-1, Secondary-0, RAID Level Qualifier-0</div><div class="line">            Size                : 557.75 GB</div><div class="line">            Number Of Drives per span:2</div><div class="line">            Span Depth          : 2</div><div class="line">        :param data:</div><div class="line">        :return:</div><div class="line">        """</div><div class="line">        out_lines = data.splitlines()</div><div class="line">        size_line = out_lines[<span class="number">1</span>]</div><div class="line">        level_line = [out_lines[<span class="number">0</span>]] + out_lines[<span class="number">2</span>:]</div><div class="line"> </div><div class="line">        info = [line.split(<span class="string">':'</span>)[<span class="number">-1</span>].strip() <span class="keyword">for</span> line <span class="keyword">in</span> level_line <span class="keyword">if</span> len(line.split(<span class="string">':'</span>)) == <span class="number">2</span>]</div><div class="line">        <span class="keyword">if</span> len(info) == <span class="number">3</span>:</div><div class="line">            st = [k <span class="keyword">for</span> (k, v) <span class="keyword">in</span> self.level.items() <span class="keyword">if</span> set(info) == set(v)]</div><div class="line">            <span class="keyword">if</span> st:</div><div class="line">                self.facts[<span class="string">'dogo_raid_level'</span>] = st[<span class="number">0</span>]</div><div class="line"> </div><div class="line">        self.facts[<span class="string">'dogo_disk_size'</span>] = module.to_GB(size_line.split(<span class="string">': '</span>)[<span class="number">-1</span>].strip())</div><div class="line"> </div><div class="line"> </div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">_raid_disk_format</span><span class="params">(self, data)</span>:</span></div><div class="line">        <span class="string">""" 阵列底层磁盘</span></div><div class="line">            Slot Number: 0</div><div class="line">            PD Type: SAS</div><div class="line">            Raw Size: 279.396 GB [0x22ecb25c Sectors]</div><div class="line">            Device Firmware Level: ES66</div><div class="line">            Inquiry Data: SEAGATE ST3300657SS     ES666SJ7CM0P</div><div class="line">            ~~~~</div><div class="line">            Slot Number: 1</div><div class="line">            PD Type: SAS</div><div class="line">            Raw Size: 279.396 GB [0x22ecb25c Sectors]</div><div class="line">            Device Firmware Level: ES66</div><div class="line">            Inquiry Data: SEAGATE ST3300657SS     ES666SJ7CNZV</div><div class="line">            ~~~~</div><div class="line">            Slot Number: 2</div><div class="line">            PD Type: SAS</div><div class="line">            Raw Size: 279.396 GB [0x22ecb25c Sectors]</div><div class="line">            Device Firmware Level: ES66</div><div class="line">            Inquiry Data: SEAGATE ST3300657SS     ES666SJ7RZYA</div><div class="line">            ~~~~</div><div class="line">            Slot Number: 3</div><div class="line">            PD Type: SAS</div><div class="line">            Raw Size: 279.396 GB [0x22ecb25c Sectors]</div><div class="line">            Device Firmware Level: ES66</div><div class="line">            Inquiry Data: SEAGATE ST3300657SS     ES666SJ6L2A8</div><div class="line">        :param result:</div><div class="line">        :return:</div><div class="line">        """</div><div class="line">        rt = []</div><div class="line">        i = <span class="number">1</span></div><div class="line">        v = &#123;&#125;</div><div class="line">        <span class="keyword">for</span> line <span class="keyword">in</span> data.splitlines():</div><div class="line">            <span class="keyword">if</span> i % <span class="number">5</span> == <span class="number">1</span>:</div><div class="line">                v[<span class="string">'slot_number'</span>] = line.split(<span class="string">': '</span>)[<span class="number">-1</span>]</div><div class="line">            <span class="keyword">elif</span> i % <span class="number">5</span> == <span class="number">2</span>:</div><div class="line">                v[<span class="string">'type'</span>] = line.split(<span class="string">': '</span>)[<span class="number">-1</span>]</div><div class="line">            <span class="keyword">elif</span> i % <span class="number">5</span> == <span class="number">3</span>:</div><div class="line">                v[<span class="string">'size'</span>] = <span class="string">' '</span>.join(line.split(<span class="string">' '</span>)[<span class="number">2</span>:<span class="number">4</span>])</div><div class="line">            <span class="keyword">elif</span> i % <span class="number">5</span> == <span class="number">4</span>:</div><div class="line">                v[<span class="string">'fireware_level'</span>] = line.split(<span class="string">': '</span>)[<span class="number">-1</span>]</div><div class="line">            <span class="keyword">else</span>:</div><div class="line">                v[<span class="string">'name'</span>] = re.sub(<span class="string">r'[ ]+'</span>, <span class="string">' '</span>, line.split(<span class="string">':'</span>)[<span class="number">-1</span>]).strip()</div><div class="line">                rt.append(v)</div><div class="line">                v = &#123;&#125;</div><div class="line"> </div><div class="line">            i += <span class="number">1</span></div><div class="line"> </div><div class="line">        self.facts[<span class="string">'dogo_raid_disk'</span>] = rt</div><div class="line"> </div><div class="line"> </div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">_get_memory_format</span><span class="params">(self, data)</span>:</span></div><div class="line">        <span class="string">""" 内存详细</span></div><div class="line">        :return:</div><div class="line">        """</div><div class="line">        rt = []</div><div class="line">        key = [<span class="string">'size'</span>, <span class="string">'locator'</span>, <span class="string">'type'</span>, <span class="string">'speed'</span>, <span class="string">'serial_number'</span>, <span class="string">'part_number'</span>]</div><div class="line"> </div><div class="line">        RE_MEMORY = re.compile(<span class="string">ur'Memory Device[\s\S]*?'</span></div><div class="line">                               <span class="string">ur'Size:\s+(?P&lt;Size&gt;\d+.*$)[\s\S]*?'</span></div><div class="line">                               <span class="string">ur'Locator:\s+(?P&lt;Locator&gt;\w+)[\s\S]*?'</span></div><div class="line">                               <span class="string">ur'Type:\s+(?P&lt;Type&gt;\w+)[\s\S]*?'</span></div><div class="line">                               <span class="string">ur'Speed:\s+(?P&lt;Speed&gt;.*$)[\s\S]*?'</span></div><div class="line">                               <span class="string">ur'Serial Number:\s+(?P&lt;serial_number&gt;\w+)[\s\S]*?'</span></div><div class="line">                               <span class="string">ur'Part Number:\s+(?P&lt;part_number&gt;\S+)'</span>,</div><div class="line">                               re.M</div><div class="line">        )</div><div class="line">        <span class="keyword">for</span> line <span class="keyword">in</span> RE_MEMORY.findall(data):</div><div class="line">            rt.append(dict(zip(key, line)))</div><div class="line"> </div><div class="line">        self.facts[<span class="string">'dogo_memory_detail'</span>] = rt</div><div class="line"> </div><div class="line"> </div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    <span class="keyword">global</span> module</div><div class="line">    module = AnsibleModuleBase(</div><div class="line">        argument_spec=dict(</div><div class="line">            gather_subset=dict(default=[<span class="string">"all"</span>], required=<span class="keyword">False</span>, type=<span class="string">'list'</span>),</div><div class="line">            filter=dict(default=<span class="string">"*"</span>, required=<span class="keyword">False</span>),</div><div class="line">            fact_path=dict(default=<span class="string">'/etc/ansible/facts.d'</span>, required=<span class="keyword">False</span>),</div><div class="line">        ),</div><div class="line">        supports_check_mode=<span class="keyword">True</span>,</div><div class="line">    )</div><div class="line">    data = get_all_facts(module)</div><div class="line">    is_virtual_type = <span class="keyword">False</span> <span class="keyword">if</span> data[<span class="string">'ansible_facts'</span>].get(<span class="string">'ansible_virtualization_type'</span>, <span class="string">'NA'</span>) == <span class="string">'NA'</span> <span class="keyword">else</span> <span class="keyword">True</span></div><div class="line">    ex_facts = DogoFacts(is_virtual_type=is_virtual_type).populate()</div><div class="line">    data[<span class="string">'ansible_facts'</span>].update(**ex_facts)</div><div class="line">    module.exit_json(**data)</div><div class="line"> </div><div class="line"><span class="comment"># import module snippets</span></div><div class="line"><span class="keyword">from</span> ansible.module_utils.basic <span class="keyword">import</span> *</div><div class="line"><span class="keyword">from</span> ansible.module_utils.facts <span class="keyword">import</span> *</div><div class="line"> </div><div class="line"> </div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">AnsibleModuleBase</span><span class="params">(AnsibleModule)</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, *args, **kwargs)</span>:</span></div><div class="line">        super(AnsibleModuleBase, self).__init__(*args, **kwargs)</div><div class="line"> </div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">pretty_bytes</span><span class="params">(self, size)</span>:</span></div><div class="line">        <span class="comment"># maxsize to GB</span></div><div class="line">        ranges = (</div><div class="line">            <span class="comment"># (1 &lt;&lt; 70, 'ZB'),</span></div><div class="line">            <span class="comment"># (1 &lt;&lt; 60, 'EB'),</span></div><div class="line">            <span class="comment"># (1 &lt;&lt; 50, 'PB'),</span></div><div class="line">            <span class="comment"># (1 &lt;&lt; 40, 'TB'),</span></div><div class="line">            (<span class="number">1</span> &lt;&lt; <span class="number">30</span>, <span class="string">'GB'</span>),</div><div class="line">            (<span class="number">1</span> &lt;&lt; <span class="number">20</span>, <span class="string">'MB'</span>),</div><div class="line">            (<span class="number">1</span> &lt;&lt; <span class="number">10</span>, <span class="string">'KB'</span>),</div><div class="line">            (<span class="number">1</span>, <span class="string">'Bytes'</span>)</div><div class="line">        )</div><div class="line">        <span class="keyword">for</span> limit, suffix <span class="keyword">in</span> ranges:</div><div class="line">            <span class="keyword">if</span> size &gt;= limit:</div><div class="line">                <span class="keyword">break</span></div><div class="line">        <span class="keyword">return</span> <span class="string">'%.2f %s'</span> % (float(size) / limit, suffix)</div><div class="line"> </div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">to_GB</span><span class="params">(self, data)</span>:</span></div><div class="line">        <span class="comment"># data : '1.58 TB'</span></div><div class="line">        ranges = dict(</div><div class="line">            TB=<span class="number">1</span> &lt;&lt; <span class="number">10</span>,</div><div class="line">            PB=<span class="number">1</span> &lt;&lt; <span class="number">20</span>,</div><div class="line">            EB=<span class="number">1</span> &lt;&lt; <span class="number">30</span>,</div><div class="line">            ZB=<span class="number">1</span> &lt;&lt; <span class="number">40</span></div><div class="line">        )</div><div class="line">        lines = data.split(<span class="string">' '</span>)</div><div class="line"> </div><div class="line">        rt = data</div><div class="line">        <span class="keyword">if</span> lines[<span class="number">-1</span>] <span class="keyword">in</span> ranges:</div><div class="line">            rt = <span class="string">'%.2f GB'</span> % (float(lines[<span class="number">0</span>]) * ranges[lines[<span class="number">1</span>]],)</div><div class="line"> </div><div class="line">        <span class="keyword">return</span> rt</div><div class="line"> </div><div class="line"> </div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure>
<h1 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h1><h2 id="测试方法"><a href="#测试方法" class="headerlink" title="测试方法"></a>测试方法</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"># ansible localhost -m setupex</div></pre></td></tr></table></figure>
<h2 id="测试结果"><a href="#测试结果" class="headerlink" title="测试结果"></a>测试结果</h2><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">    "ansible_facts": &#123;</div><div class="line">        ...,</div><div class="line">        "dogo_disk_size": "557.75 GB", </div><div class="line">        "dogo_memory_detail": [</div><div class="line">            &#123;</div><div class="line">                "locator": "DIMM_A1", </div><div class="line">                "part_number": "KP9RN2-HYC", </div><div class="line">                "serial_number": "2A2E4CB5", </div><div class="line">                "size": "8192 MB", </div><div class="line">                "speed": "1333 MHz", </div><div class="line">                "type": "DDR3"</div><div class="line">            &#125;, </div><div class="line">            &#123;</div><div class="line">                "locator": "DIMM_A2", </div><div class="line">                "part_number": "9965516-100.A00LF", </div><div class="line">                "serial_number": "363AAE40", </div><div class="line">                "size": "8192 MB", </div><div class="line">                "speed": "1600 MHz", </div><div class="line">                "type": "DDR3"</div><div class="line">            &#125;, </div><div class="line">            &#123;</div><div class="line">                "locator": "DIMM_B1", </div><div class="line">                "part_number": "KP9RN2-HYC", </div><div class="line">                "serial_number": "38363A83", </div><div class="line">                "size": "8192 MB", </div><div class="line">                "speed": "1333 MHz", </div><div class="line">                "type": "DDR3"</div><div class="line">            &#125;, </div><div class="line">            &#123;</div><div class="line">                "locator": "DIMM_B2", </div><div class="line">                "part_number": "HMT31GR7AFR4A-H9", </div><div class="line">                "serial_number": "00000000", </div><div class="line">                "size": "8192 MB", </div><div class="line">                "speed": "1333 MHz", </div><div class="line">                "type": "DDR3"</div><div class="line">            &#125;</div><div class="line">        ], </div><div class="line">        "dogo_raid_disk": [</div><div class="line">            &#123;</div><div class="line">                "fireware_level": "ES66", </div><div class="line">                "name": "SEAGATE ST3300657SS ES666SJ7CM0P", </div><div class="line">                "size": "279.396 GB", </div><div class="line">                "slot_number": "0", </div><div class="line">                "type": "SAS"</div><div class="line">            &#125;, </div><div class="line">            &#123;</div><div class="line">                "fireware_level": "ES66", </div><div class="line">                "name": "SEAGATE ST3300657SS ES666SJ7CNZV", </div><div class="line">                "size": "279.396 GB", </div><div class="line">                "slot_number": "1", </div><div class="line">                "type": "SAS"</div><div class="line">            &#125;, </div><div class="line">            &#123;</div><div class="line">                "fireware_level": "ES66", </div><div class="line">                "name": "SEAGATE ST3300657SS ES666SJ7RZYA", </div><div class="line">                "size": "279.396 GB", </div><div class="line">                "slot_number": "2", </div><div class="line">                "type": "SAS"</div><div class="line">            &#125;, </div><div class="line">            &#123;</div><div class="line">                "fireware_level": "ES66", </div><div class="line">                "name": "SEAGATE ST3300657SS ES666SJ6L2A8", </div><div class="line">                "size": "279.396 GB", </div><div class="line">                "slot_number": "3", </div><div class="line">                "type": "SAS"</div><div class="line">            &#125;</div><div class="line">        ], </div><div class="line">        "dogo_raid_info": [</div><div class="line">            &#123;</div><div class="line">                "adapter": "0", </div><div class="line">                "memory": "512MB", </div><div class="line">                "name": "PERC H710 Mini", </div><div class="line">                "serial": "3C801FE"</div><div class="line">            &#125;</div><div class="line">        ], </div><div class="line">        "dogo_raid_level": "RAID-10", </div><div class="line">        "module_setup": true</div><div class="line">    &#125;, </div><div class="line">    "changed": false</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;说明&quot;&gt;&lt;a href=&quot;#说明&quot; class=&quot;headerlink&quot; title=&quot;说明&quot;&gt;&lt;/a&gt;说明&lt;/h1&gt;&lt;p&gt;为了配合做的资产信息搜集, 直接在setup模块上加上了raid卡,底层的物理磁盘,内存等相关信息.&lt;/p&gt;
&lt;h1 id=&quot;一些改变&quot;&gt;&lt;a href=&quot;#一些改变&quot; class=&quot;headerlink&quot; title=&quot;一些改变&quot;&gt;&lt;/a&gt;一些改变&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;取消了原本关于磁盘单位的自动格式,改为磁盘的最大单位支持到GB,如果需要和原生一下,那在代码文件的 &lt;code&gt;314-317&lt;/code&gt; 行注释&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;依赖说明&quot;&gt;&lt;a href=&quot;#依赖说明&quot; class=&quot;headerlink&quot; title=&quot;依赖说明&quot;&gt;&lt;/a&gt;依赖说明&lt;/h1&gt;&lt;p&gt;底层的raid和磁盘信息收集需要安装&lt;code&gt;MegaCli64&lt;/code&gt;包,关于安装方法,自行解决.&lt;br&gt;另外关于raid级别,怎么推算成raid5或者raid1+0的. 因为我线上只有这2种,所以如果需要的话,自行解决raid级别的判断.&lt;/p&gt;
&lt;h1 id=&quot;代码文件&quot;&gt;&lt;a href=&quot;#代码文件&quot; class=&quot;headerlink&quot; title=&quot;代码文件&quot;&gt;&lt;/a&gt;代码文件&lt;/h1&gt;&lt;p&gt;把下面的代码保存为扩展模块,比如文件名setupex.py, 放在你&lt;code&gt;ansible.cfg&lt;/code&gt;配置文件中&lt;code&gt;library&lt;/code&gt;定义的路径下.&lt;/p&gt;
    
    </summary>
    
      <category term="ansible" scheme="https://yoncan.github.io/categories/ansible/"/>
    
    
      <category term="ansible" scheme="https://yoncan.github.io/tags/ansible/"/>
    
      <category term="python" scheme="https://yoncan.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>一个pythoner需要具备的知识</title>
    <link href="https://yoncan.github.io/blog/2016/12/python-study.html"/>
    <id>https://yoncan.github.io/blog/2016/12/python-study.html</id>
    <published>2016-12-29T13:50:41.000Z</published>
    <updated>2017-01-09T15:31:51.629Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>路漫漫其修远兮, 吾将上下而求索</p>
</blockquote>
<p><a href="https://awesome-python.com/" target="_blank" rel="external">https://awesome-python.com/</a><br>奔跑的路上,不要忘了初衷. 也不要停下学习;<br>共勉之.</p>
<a id="more"></a> ]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;&lt;p&gt;路漫漫其修远兮, 吾将上下而求索&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://awesome-python.com/&quot;&gt;https://awesome-python.com/&lt;/a&gt;&lt;br&gt;奔跑的路上,不要忘了初衷. 也不要停下学习;&lt;br&gt;共勉之.&lt;/p&gt;
    
    </summary>
    
      <category term="python" scheme="https://yoncan.github.io/categories/python/"/>
    
    
      <category term="python" scheme="https://yoncan.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>运维后台功能介绍</title>
    <link href="https://yoncan.github.io/blog/2016/11/yunwei-houtai.html"/>
    <id>https://yoncan.github.io/blog/2016/11/yunwei-houtai.html</id>
    <published>2016-11-09T16:01:21.000Z</published>
    <updated>2017-01-09T16:15:28.056Z</updated>
    
    <content type="html"><![CDATA[<h1 id="后台的架构图"><a href="#后台的架构图" class="headerlink" title="后台的架构图"></a>后台的架构图</h1><p><img src="/assert/images/2016-11-10-yunwei-houtai/modal.jpg" alt="后台的架构图"><br>功能的介绍</p>
<ul>
<li>使用的是flask框架开发,前端用的BootStrap+Jquery.</li>
<li>任务的使用的是celery异步框架,这样就剥离了前端与后端的阻塞.</li>
<li>后台与各个服务器端通信使用的ZeroMQ,它的python库为Pyzmq. 利用到了一个常用的模型Pub/Sub, 实时交互Req/Rep等</li>
<li>数据库层了, Redis作为Celery的Broker,同时会做为一些数据的缓存. 同时使用SQLAlchemy做为ORM,谁用谁知道.</li>
<li>Agent端的任务执行,全部使用Python模块化处理了,执行指定的任务,就调用对应编排好的任务; 任务使用多线程执行的,执行完成之后把结果推送到处理结果的队列中, 再由结果队列Push到后台的Log Collector日志搜集端. 由LogCollector处理返回的日志并格式化入库.</li>
</ul>
<a id="more"></a>
<hr>
<h1 id="页面的一些截图"><a href="#页面的一些截图" class="headerlink" title="页面的一些截图"></a>页面的一些截图</h1><h2 id="后台首页"><a href="#后台首页" class="headerlink" title="后台首页"></a>后台首页</h2><p><img src="/assert/images/2016-11-10-yunwei-houtai/dogo_dashboard.png" alt="后台的架构图"></p>
<h2 id="游戏服管理"><a href="#游戏服管理" class="headerlink" title="游戏服管理"></a>游戏服管理</h2><p>支持自动部署,快速新建,因为是windows服务器,所以所有游戏服操作, 用ZMQ写了一套C/S架构,有点类似于salt的一套程序.<br><img src="/assert/images/2016-11-10-yunwei-houtai/dogo_gameserver.png" alt="后台的架构图"></p>
<h2 id="游戏组管理"><a href="#游戏组管理" class="headerlink" title="游戏组管理"></a>游戏组管理</h2><p>底层部署是利用ansible api完成<br><img src="/assert/images/2016-11-10-yunwei-houtai/dogo_gamegroup.png" alt="后台的架构图"></p>
<h2 id="指令操作"><a href="#指令操作" class="headerlink" title="指令操作"></a>指令操作</h2><p>对游戏服进行一些指令操作.都是用ZMQ写的接口实现的<br><img src="/assert/images/2016-11-10-yunwei-houtai/dogo_gamecmd.png" alt="后台的架构图"></p>
<h2 id="前端资源列表"><a href="#前端资源列表" class="headerlink" title="前端资源列表"></a>前端资源列表</h2><p><img src="/assert/images/2016-11-10-yunwei-houtai/dogo_game_url.png" alt="后台的架构图"></p>
<h2 id="游戏更新"><a href="#游戏更新" class="headerlink" title="游戏更新"></a>游戏更新</h2><p>分为前后端更新.<br><img src="/assert/images/2016-11-10-yunwei-houtai/game_update.png" alt="后台的架构图"></p>
<h2 id="任务列表"><a href="#任务列表" class="headerlink" title="任务列表"></a>任务列表</h2><p>所有的执行操作都是用的celery实现的异步化, 提交的任务在这里总览<br><img src="/assert/images/2016-11-10-yunwei-houtai/game_tasks.png" alt="后台的架构图"><br>执行任务的一些详情<br><img src="/assert/images/2016-11-10-yunwei-houtai/game_detail.png" alt="后台的架构图"></p>
<h2 id="SVN的在线更新"><a href="#SVN的在线更新" class="headerlink" title="SVN的在线更新"></a>SVN的在线更新</h2><p>这个是实时返回输出的. 之后的Ansible Gui开发,也是会用到socket.io的<br><img src="/assert/images/2016-11-10-yunwei-houtai/game_svn.png" alt="后台的架构图"></p>
<h2 id="CDN推送"><a href="#CDN推送" class="headerlink" title="CDN推送"></a>CDN推送</h2><p>把公司用到的CDN使用都API化,实现统一的一个推送界面<br><img src="/assert/images/2016-11-10-yunwei-houtai/game_pushcdn.png" alt="后台的架构图"></p>
<h2 id="资产的管理"><a href="#资产的管理" class="headerlink" title="资产的管理"></a>资产的管理</h2><p>只需要录入初始的IP, 就可以用ansible 的api自动采集硬件信息,变更的记录也弄成了一个时间序列形式的展示<br><img src="/assert/images/2016-11-10-yunwei-houtai/game_cmdb.png" alt="后台的架构图"><br><img src="/assert/images/2016-11-10-yunwei-houtai/game_cmdb_changelog.png" alt="后台的架构图"></p>
<h2 id="Host主机的一些变量设置"><a href="#Host主机的一些变量设置" class="headerlink" title="Host主机的一些变量设置"></a>Host主机的一些变量设置</h2><p>如果你了解ansible. 那你就知道这是在干啥了.</p>
<p><img src="/assert/images/2016-11-10-yunwei-houtai/dogo_game_cmdb_profile.png" alt="后台的架构图"></p>
<hr>
<h2 id="用户中心的管理"><a href="#用户中心的管理" class="headerlink" title="用户中心的管理"></a>用户中心的管理</h2><p>包括用户管理/小组管理/部门管理/权限模块管理.权限的设计模型.<br>用户可以加入到用户小组中, 一个部门下面可以有多个小组. 部门管理员可以对本部门拥有的权限,授权到小组中.可以自己管理本部门下小组/用户; 所有小组作为最小的权限单元,只要用户加入到所属部门的小组中,就自动集成小组权限. 小组拥有的权限, 最大受限于部门拥有哪些权限.</p>
<p><img src="/assert/images/2016-11-10-yunwei-houtai/game_dept.png" alt="后台的架构图"><br><img src="/assert/images/2016-11-10-yunwei-houtai/game_dept_detail.png" alt="后台的架构图"></p>
<p><img src="/assert/images/2016-11-10-yunwei-houtai/game_module.png" alt="后台的架构图"></p>
<p><img src="/assert/images/2016-11-10-yunwei-houtai/game_role.png" alt="后台的架构图"></p>
<p><img src="/assert/images/2016-11-10-yunwei-houtai/game_user.png" alt="后台的架构图"></p>
<hr>
<h1 id="TODO"><a href="#TODO" class="headerlink" title="TODO"></a>TODO</h1><p>项目的源码,待整理完成之后,在公布出去.</p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;后台的架构图&quot;&gt;&lt;a href=&quot;#后台的架构图&quot; class=&quot;headerlink&quot; title=&quot;后台的架构图&quot;&gt;&lt;/a&gt;后台的架构图&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;/assert/images/2016-11-10-yunwei-houtai/modal.jpg&quot; alt=&quot;后台的架构图&quot;&gt;&lt;br&gt;功能的介绍&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;使用的是flask框架开发,前端用的BootStrap+Jquery.&lt;/li&gt;
&lt;li&gt;任务的使用的是celery异步框架,这样就剥离了前端与后端的阻塞.&lt;/li&gt;
&lt;li&gt;后台与各个服务器端通信使用的ZeroMQ,它的python库为Pyzmq. 利用到了一个常用的模型Pub/Sub, 实时交互Req/Rep等&lt;/li&gt;
&lt;li&gt;数据库层了, Redis作为Celery的Broker,同时会做为一些数据的缓存. 同时使用SQLAlchemy做为ORM,谁用谁知道.&lt;/li&gt;
&lt;li&gt;Agent端的任务执行,全部使用Python模块化处理了,执行指定的任务,就调用对应编排好的任务; 任务使用多线程执行的,执行完成之后把结果推送到处理结果的队列中, 再由结果队列Push到后台的Log Collector日志搜集端. 由LogCollector处理返回的日志并格式化入库.&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="flask" scheme="https://yoncan.github.io/categories/flask/"/>
    
    
      <category term="flask" scheme="https://yoncan.github.io/tags/flask/"/>
    
      <category term="python" scheme="https://yoncan.github.io/tags/python/"/>
    
      <category term="pyzmq" scheme="https://yoncan.github.io/tags/pyzmq/"/>
    
  </entry>
  
  <entry>
    <title>flask sqlalchemy序列化查询结果</title>
    <link href="https://yoncan.github.io/blog/2016/09/flask-sqlalchemy-seriablize.html"/>
    <id>https://yoncan.github.io/blog/2016/09/flask-sqlalchemy-seriablize.html</id>
    <published>2016-09-09T16:16:49.000Z</published>
    <updated>2017-01-09T16:23:03.359Z</updated>
    
    <content type="html"><![CDATA[<p>在flask开发运维后台的时候, 比较多的需求是, 从数据库取得结果, 需要序列化之后传递给前端的表格插件.</p>
<p>下面我们创建一个基类, 在定义model的时候, 继承就可以达到想要的结果了</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">SerializeMixin</span><span class="params">(object)</span>:</span></div><div class="line">    <span class="string">'Mixin for retrieving public fields of model in json-compatible format'</span></div><div class="line"></div><div class="line">    __public__ = <span class="keyword">None</span></div><div class="line">    __exclude__ = <span class="keyword">None</span></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">to_json</span><span class="params">(self, exclude=[], include=[], only=[], convert=True, replace=False, extend=&#123;&#125;, **kwargs)</span>:</span></div><div class="line">        <span class="string">"""</span></div><div class="line">        :param exclude: 在转化时指定需要排除的字段列表</div><div class="line">        :param include: 在转化时指定需要包含的字段列表</div><div class="line">        :param only:    在转化时指定仅仅包含的字段列表</div><div class="line">        :param convert: 附加转换结果显示,当需要转换值的显示成指定的状态值使用, 状态值需要在kwargs指定.\</div><div class="line">                     &#123;'status': &#123;'0': u'正常', '1': u'故障',...&#125;&#125;, 将会在返回的字段中附加一个同名的且前面加'_'的字段,\</div><div class="line">                     当status的值为'0'时, 那返回值会附加的'_status'字段,且'_status'字段值为u'正常'.</div><div class="line">                    当存在外键的时候, 会获取外键中是否有'_get_public'方法,有的化将显示一个友好的值.</div><div class="line"></div><div class="line">        :param replace: 当为True时,将不会产生_下划线的转换字段,而是直接替换</div><div class="line">        :param extend: 扩充值, 想格式化的json字符串扩充值,主要是解决外键引用而又想显示值</div><div class="line">        :param kwargs:</div><div class="line">        :return:</div><div class="line">        """</div><div class="line"></div><div class="line">        data = &#123;&#125;</div><div class="line">        items = self._sa_instance_state.attrs.items()</div><div class="line">        column_name = self._sa_instance_state.attrs.keys()</div><div class="line">        self.convert = convert</div><div class="line">        self.kwargs = kwargs</div><div class="line"></div><div class="line">        <span class="keyword">if</span> only:</div><div class="line">            <span class="string">""" If you specify the parameters of only """</span></div><div class="line">            _public = set(only)</div><div class="line">            _exclude = set([])</div><div class="line">        <span class="keyword">else</span>:</div><div class="line">            <span class="keyword">if</span> self.__public__ <span class="keyword">and</span> self.__exclude__ <span class="keyword">is</span> <span class="keyword">None</span>:</div><div class="line">                <span class="string">""" __public__ is True and __exclude__ is False """</span></div><div class="line">                _public = self.__public__</div><div class="line">                _exclude = []</div><div class="line">            <span class="keyword">elif</span> self.__public__ <span class="keyword">is</span> <span class="keyword">None</span> <span class="keyword">and</span> self.__exclude__:</div><div class="line">                <span class="string">""" __public__ is False and __exclude__ is True """</span></div><div class="line">                _public = []</div><div class="line">                _exclude = self.__exclude__</div><div class="line">            <span class="keyword">elif</span> self.__public__ <span class="keyword">and</span> self.__exclude__:</div><div class="line">                <span class="string">""" __public__ is True and __exclude__ is True """</span></div><div class="line">                _exclude = self.__exclude__</div><div class="line">                _public = set(self.__public__) - set(_exclude)</div><div class="line">            <span class="keyword">else</span>:</div><div class="line">                <span class="string">""" __public__ is False and __exclude__ is False """</span></div><div class="line">                _public = column_name</div><div class="line">                _exclude = []</div><div class="line"></div><div class="line">            <span class="keyword">if</span> exclude:</div><div class="line">                <span class="string">""" If you specify the parameters of exclude """</span></div><div class="line">                _exclude = set(_exclude + exclude)</div><div class="line"></div><div class="line">            <span class="keyword">if</span> include:</div><div class="line">                <span class="string">""" If you specify the parameters of include """</span></div><div class="line">                _public = set(_public + include) - set(_exclude)</div><div class="line"></div><div class="line">        <span class="keyword">for</span> key, field <span class="keyword">in</span> items:</div><div class="line">            <span class="keyword">if</span> _public <span class="keyword">and</span> key <span class="keyword">not</span> <span class="keyword">in</span> _public: <span class="keyword">continue</span></div><div class="line">            <span class="keyword">if</span> key <span class="keyword">in</span> _exclude: <span class="keyword">continue</span></div><div class="line"></div><div class="line">            value = self._serialize(field.value)</div><div class="line"></div><div class="line">            data[key] = value</div><div class="line">            <span class="keyword">if</span> convert <span class="keyword">and</span> kwargs <span class="keyword">and</span> kwargs.has_key(key):</div><div class="line">                <span class="keyword">if</span> replace <span class="keyword">is</span> <span class="keyword">True</span>:</div><div class="line">                    _key = <span class="string">'%s'</span> % key</div><div class="line">                <span class="keyword">else</span>:</div><div class="line">                    _key = <span class="string">'_%s'</span> % key</div><div class="line"></div><div class="line">                data[_key] = kwargs.get(key, value)</div><div class="line">                <span class="comment"># data[_key] = kwargs[key].get(value, value)</span></div><div class="line"></div><div class="line">        <span class="keyword">if</span> extend:</div><div class="line">            data.update(extend)</div><div class="line"></div><div class="line">        <span class="keyword">return</span> data</div><div class="line"></div><div class="line"></div><div class="line"><span class="meta">    @classmethod</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">_serialize</span><span class="params">(cls, value, follow_fk=False)</span>:</span></div><div class="line">        ret = value</div><div class="line"></div><div class="line">        <span class="keyword">if</span> isinstance(value, datetime.datetime) <span class="keyword">or</span> isinstance(value, datetime.date):</div><div class="line">            ret = str(value)</div><div class="line">        <span class="keyword">elif</span> isinstance(value, uuid.UUID):</div><div class="line">            ret = str(value)</div><div class="line"></div><div class="line">        <span class="keyword">elif</span> BaseModelMixin <span class="keyword">in</span> value.__class__.__bases__ <span class="keyword">or</span> SerializeMixin <span class="keyword">in</span> value.__class__.__bases__:</div><div class="line">            <span class="comment"># 一对多或者多对一</span></div><div class="line">            <span class="keyword">try</span>:</div><div class="line">                ret = value._get_public()</div><div class="line">            <span class="keyword">except</span>:</div><div class="line">                <span class="keyword">pass</span></div><div class="line">        <span class="keyword">elif</span> AppenderMixin <span class="keyword">in</span> value.__class__.__bases__:</div><div class="line">            <span class="comment"># 多对多</span></div><div class="line">            <span class="keyword">try</span>:</div><div class="line">                ret = [x._get_public() <span class="keyword">for</span> x <span class="keyword">in</span> value.all()]</div><div class="line">            <span class="keyword">except</span> Exception, ex:</div><div class="line">                <span class="keyword">print</span> <span class="string">'many to many : '</span>, ex</div><div class="line"></div><div class="line">        <span class="keyword">elif</span> hasattr(value, <span class="string">'__iter__'</span>):</div><div class="line">            <span class="comment"># 迭代对象</span></div><div class="line">            <span class="comment"># Don't set True</span></div><div class="line">            <span class="keyword">if</span> follow_fk:</div><div class="line">                ret = []</div><div class="line">                <span class="keyword">for</span> v <span class="keyword">in</span> value:</div><div class="line">                    ret.append(cls._serialize(v))</div><div class="line"></div><div class="line">        <span class="keyword">return</span> ret</div><div class="line"></div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">BaseModelMixin</span><span class="params">(SerializeMixin)</span>:</span></div><div class="line">    <span class="string">""" 定义基础的Model用于继承 """</span></div><div class="line"></div><div class="line">    __table_args__ = &#123;</div><div class="line">        <span class="string">'mysql_engine'</span>: <span class="string">u'InnoDB'</span>,</div><div class="line">        <span class="string">'mysql_default_charset'</span>: <span class="string">u'utf8'</span></div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__repr__</span><span class="params">(self)</span>:</span></div><div class="line">        <span class="keyword">if</span> hasattr(self, <span class="string">'name'</span>):</div><div class="line">            <span class="keyword">return</span> <span class="string">'&lt;%s %s&gt;'</span> % (self.__class__.__name__, self.name)</div><div class="line">        <span class="keyword">else</span>:</div><div class="line">            <span class="keyword">return</span> <span class="string">'&lt;%s %s&gt;'</span> % (self.__class__.__name__, self.id )</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">_get_public</span><span class="params">(self)</span>:</span></div><div class="line">        <span class="string">""" 当存在外键的时候, 一个友好的显示名称 """</span></div><div class="line"></div><div class="line">        ret = self</div><div class="line">        <span class="keyword">try</span>:</div><div class="line">            <span class="keyword">if</span> hasattr(self, <span class="string">'name'</span>):</div><div class="line">                rt = self.name</div><div class="line">            <span class="keyword">elif</span> hasattr(self, <span class="string">'id'</span>):</div><div class="line">                rt = self.id</div><div class="line">        <span class="keyword">except</span> Exception, ex:</div><div class="line">            <span class="keyword">print</span> <span class="string">'_get_public error:%s'</span> % str(ex)</div><div class="line"></div><div class="line">        <span class="keyword">return</span> rt</div><div class="line"></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">save</span><span class="params">(self)</span>:</span></div><div class="line">        db.session.add(self)</div><div class="line">        db.session.commit()</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete</span><span class="params">(self)</span>:</span></div><div class="line">        db.session.delete(self)</div><div class="line">        db.session.commit()</div></pre></td></tr></table></figure>
<a id="more"></a>
<p>在model定义时, 可以选指定在子类中指定需要序列化的字段<strong>public</strong> 或者 <strong>exculde</strong> 指定需要排除的字段, 注意当model中定义了外键的时候,稍后在做解释.</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Test</span><span class="params">(db.Model, BaseModelMixin)</span>:</span></div><div class="line">    __tablename__ = <span class="string">'test'</span></div><div class="line">    __public__ = [<span class="string">'id'</span>, <span class="string">'name'</span>, <span class="string">'email'</span>]</div><div class="line"> </div><div class="line">    id = db.Column(db.Integer, primary_key=<span class="keyword">True</span>, autoincrement=<span class="keyword">True</span>)</div><div class="line">    name = db.Column(db.String(<span class="number">100</span>), nullable=<span class="keyword">False</span>)</div><div class="line">    email = db.Column(db.String(<span class="number">100</span>), nullable=<span class="keyword">False</span>, unique=<span class="keyword">True</span>)</div><div class="line"> </div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__repr__</span><span class="params">(self)</span>:</span></div><div class="line">        <span class="keyword">return</span> <span class="string">'&lt;Test %r&gt;'</span> % self.name</div></pre></td></tr></table></figure>
<p>当然也可以不用指定<strong>public</strong>. 这样就会序列化Test 的全部的表字段, 下面做一些测试</p>
<p>测试2中情况:</p>
<ol>
<li>指定<strong>public</strong> 字段 或者 指定<strong>exclude</strong> 字段;</li>
<li>什么都不指定, 在查询的时候, 才指定</li>
<li>下面是指定了<strong>public</strong> 字段时的结果,  <strong>exclude</strong> 就不在演示了</li>
</ol>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">In [<span class="number">5</span>]: db.session.execute(Test.__table__.insert(), [dict(name=<span class="string">'name_%s'</span>%x, email=<span class="string">'%s@qq.com'</span>% x) <span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">10</span>)])</div><div class="line">Out[<span class="number">5</span>]: &lt;sqlalchemy.engine.result.ResultProxy at <span class="number">0x4737e50</span>&gt;</div><div class="line"> </div><div class="line">In [<span class="number">6</span>]: db.session.commit()</div><div class="line">In [<span class="number">7</span>]: Test.query.all()</div><div class="line">Out[<span class="number">7</span>]: </div><div class="line">[&lt;Test <span class="string">u'name_1'</span>&gt;,</div><div class="line"> &lt;Test <span class="string">u'name_1'</span>&gt;,</div><div class="line"> &lt;Test <span class="string">u'name_1'</span>&gt;,</div><div class="line"> &lt;Test <span class="string">u'name_2'</span>&gt;,</div><div class="line"> &lt;Test <span class="string">u'name_3'</span>&gt;,</div><div class="line"> &lt;Test <span class="string">u'name_4'</span>&gt;,</div><div class="line"> &lt;Test <span class="string">u'name_5'</span>&gt;,</div><div class="line"> &lt;Test <span class="string">u'name_6'</span>&gt;,</div><div class="line"> &lt;Test <span class="string">u'name_7'</span>&gt;,</div><div class="line"> &lt;Test <span class="string">u'name_8'</span>&gt;,</div><div class="line"> &lt;Test <span class="string">u'name_9'</span>&gt;]</div><div class="line"> </div><div class="line">In [<span class="number">8</span>]: [ x.to_json() <span class="keyword">for</span> x <span class="keyword">in</span> Test.query.all() ]</div><div class="line">Out[<span class="number">8</span>]: </div><div class="line">[&#123;<span class="string">'id'</span>: <span class="number">1L</span>, <span class="string">'name'</span>: <span class="string">u'name_1'</span>&#125;,</div><div class="line"> &#123;<span class="string">'email'</span>: <span class="string">u'%s@qq.com'</span>, <span class="string">'id'</span>: <span class="number">3L</span>, <span class="string">'name'</span>: <span class="string">u'name_1'</span>&#125;,</div><div class="line"> &#123;<span class="string">'email'</span>: <span class="string">u'1@qq.com'</span>, <span class="string">'id'</span>: <span class="number">5L</span>, <span class="string">'name'</span>: <span class="string">u'name_1'</span>&#125;,</div><div class="line"> &#123;<span class="string">'email'</span>: <span class="string">u'2@qq.com'</span>, <span class="string">'id'</span>: <span class="number">6L</span>, <span class="string">'name'</span>: <span class="string">u'name_2'</span>&#125;,</div><div class="line"> &#123;<span class="string">'email'</span>: <span class="string">u'3@qq.com'</span>, <span class="string">'id'</span>: <span class="number">7L</span>, <span class="string">'name'</span>: <span class="string">u'name_3'</span>&#125;,</div><div class="line"> &#123;<span class="string">'email'</span>: <span class="string">u'4@qq.com'</span>, <span class="string">'id'</span>: <span class="number">8L</span>, <span class="string">'name'</span>: <span class="string">u'name_4'</span>&#125;,</div><div class="line"> &#123;<span class="string">'email'</span>: <span class="string">u'5@qq.com'</span>, <span class="string">'id'</span>: <span class="number">9L</span>, <span class="string">'name'</span>: <span class="string">u'name_5'</span>&#125;,</div><div class="line"> &#123;<span class="string">'email'</span>: <span class="string">u'6@qq.com'</span>, <span class="string">'id'</span>: <span class="number">10L</span>, <span class="string">'name'</span>: <span class="string">u'name_6'</span>&#125;,</div><div class="line"> &#123;<span class="string">'email'</span>: <span class="string">u'7@qq.com'</span>, <span class="string">'id'</span>: <span class="number">11L</span>, <span class="string">'name'</span>: <span class="string">u'name_7'</span>&#125;,</div><div class="line"> &#123;<span class="string">'email'</span>: <span class="string">u'8@qq.com'</span>, <span class="string">'id'</span>: <span class="number">12L</span>, <span class="string">'name'</span>: <span class="string">u'name_8'</span>&#125;,</div><div class="line"> &#123;<span class="string">'email'</span>: <span class="string">u'9@qq.com'</span>, <span class="string">'id'</span>: <span class="number">13L</span>, <span class="string">'name'</span>: <span class="string">u'name_9'</span>&#125;]</div></pre></td></tr></table></figure>
<ol>
<li>当不指定时, 修改之前定义的model. 去掉 <strong>public</strong></li>
</ol>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Test</span><span class="params">(db.Model, AutoSerialize)</span>:</span></div><div class="line">    __tablename__ = <span class="string">'test'</span></div><div class="line">    <span class="comment"># __public__ = ['id', 'name', 'email']</span></div><div class="line"> </div><div class="line">    id = db.Column(db.Integer, primary_key=<span class="keyword">True</span>, autoincrement=<span class="keyword">True</span>)</div><div class="line">    name = db.Column(db.String(<span class="number">100</span>), nullable=<span class="keyword">False</span>)</div><div class="line">    email = db.Column(db.String(<span class="number">100</span>), nullable=<span class="keyword">False</span>, unique=<span class="keyword">True</span>)</div><div class="line"> </div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__repr__</span><span class="params">(self)</span>:</span></div><div class="line">        <span class="keyword">return</span> <span class="string">'&lt;Test %r&gt;'</span> % self.name</div></pre></td></tr></table></figure>
<p>重新测试, 同样会遍历出所有字段</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">In [<span class="number">1</span>]: [ x.to_json() <span class="keyword">for</span> x <span class="keyword">in</span> Test.query.all() ]</div><div class="line">Out[<span class="number">1</span>]: </div><div class="line">[&#123;<span class="string">'id'</span>: <span class="number">1L</span>, <span class="string">'name'</span>: <span class="string">u'name_1'</span>&#125;,</div><div class="line"> &#123;<span class="string">'email'</span>: <span class="string">u'%s@qq.com'</span>, <span class="string">'id'</span>: <span class="number">3L</span>, <span class="string">'name'</span>: <span class="string">u'name_1'</span>&#125;,</div><div class="line"> &#123;<span class="string">'email'</span>: <span class="string">u'1@qq.com'</span>, <span class="string">'id'</span>: <span class="number">5L</span>, <span class="string">'name'</span>: <span class="string">u'name_1'</span>&#125;,</div><div class="line"> &#123;<span class="string">'email'</span>: <span class="string">u'2@qq.com'</span>, <span class="string">'id'</span>: <span class="number">6L</span>, <span class="string">'name'</span>: <span class="string">u'name_2'</span>&#125;,</div><div class="line"> &#123;<span class="string">'email'</span>: <span class="string">u'3@qq.com'</span>, <span class="string">'id'</span>: <span class="number">7L</span>, <span class="string">'name'</span>: <span class="string">u'name_3'</span>&#125;,</div><div class="line"> &#123;<span class="string">'email'</span>: <span class="string">u'4@qq.com'</span>, <span class="string">'id'</span>: <span class="number">8L</span>, <span class="string">'name'</span>: <span class="string">u'name_4'</span>&#125;,</div><div class="line"> &#123;<span class="string">'email'</span>: <span class="string">u'5@qq.com'</span>, <span class="string">'id'</span>: <span class="number">9L</span>, <span class="string">'name'</span>: <span class="string">u'name_5'</span>&#125;,</div><div class="line"> &#123;<span class="string">'email'</span>: <span class="string">u'6@qq.com'</span>, <span class="string">'id'</span>: <span class="number">10L</span>, <span class="string">'name'</span>: <span class="string">u'name_6'</span>&#125;,</div><div class="line"> &#123;<span class="string">'email'</span>: <span class="string">u'7@qq.com'</span>, <span class="string">'id'</span>: <span class="number">11L</span>, <span class="string">'name'</span>: <span class="string">u'name_7'</span>&#125;,</div><div class="line"> &#123;<span class="string">'email'</span>: <span class="string">u'8@qq.com'</span>, <span class="string">'id'</span>: <span class="number">12L</span>, <span class="string">'name'</span>: <span class="string">u'name_8'</span>&#125;,</div><div class="line"> &#123;<span class="string">'email'</span>: <span class="string">u'9@qq.com'</span>, <span class="string">'id'</span>: <span class="number">13L</span>, <span class="string">'name'</span>: <span class="string">u'name_9'</span>&#125;]</div></pre></td></tr></table></figure>
<p>我们在查询的时候, 也可以指定排除的字段exclude, 或者仅包含指定的字段only</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line">In [<span class="number">2</span>]: [ x.to_json(exclude=[<span class="string">'id'</span>]) <span class="keyword">for</span> x <span class="keyword">in</span> Test.query.all() ] </div><div class="line">Out[<span class="number">2</span>]: </div><div class="line">[&#123;<span class="string">'name'</span>: <span class="string">u'name_1'</span>&#125;,</div><div class="line"> &#123;<span class="string">'email'</span>: <span class="string">u'%s@qq.com'</span>, <span class="string">'name'</span>: <span class="string">u'name_1'</span>&#125;,</div><div class="line"> &#123;<span class="string">'email'</span>: <span class="string">u'1@qq.com'</span>, <span class="string">'name'</span>: <span class="string">u'name_1'</span>&#125;,</div><div class="line"> &#123;<span class="string">'email'</span>: <span class="string">u'2@qq.com'</span>, <span class="string">'name'</span>: <span class="string">u'name_2'</span>&#125;,</div><div class="line"> &#123;<span class="string">'email'</span>: <span class="string">u'3@qq.com'</span>, <span class="string">'name'</span>: <span class="string">u'name_3'</span>&#125;,</div><div class="line"> &#123;<span class="string">'email'</span>: <span class="string">u'4@qq.com'</span>, <span class="string">'name'</span>: <span class="string">u'name_4'</span>&#125;,</div><div class="line"> &#123;<span class="string">'email'</span>: <span class="string">u'5@qq.com'</span>, <span class="string">'name'</span>: <span class="string">u'name_5'</span>&#125;,</div><div class="line"> &#123;<span class="string">'email'</span>: <span class="string">u'6@qq.com'</span>, <span class="string">'name'</span>: <span class="string">u'name_6'</span>&#125;,</div><div class="line"> &#123;<span class="string">'email'</span>: <span class="string">u'7@qq.com'</span>, <span class="string">'name'</span>: <span class="string">u'name_7'</span>&#125;,</div><div class="line"> &#123;<span class="string">'email'</span>: <span class="string">u'8@qq.com'</span>, <span class="string">'name'</span>: <span class="string">u'name_8'</span>&#125;,</div><div class="line"> &#123;<span class="string">'email'</span>: <span class="string">u'9@qq.com'</span>, <span class="string">'name'</span>: <span class="string">u'name_9'</span>&#125;]</div><div class="line"> </div><div class="line">In [<span class="number">3</span>]: [ x.to_json(only=[<span class="string">'name'</span>]) <span class="keyword">for</span> x <span class="keyword">in</span> Test.query.all() ]                  </div><div class="line">Out[<span class="number">3</span>]: </div><div class="line">[&#123;<span class="string">'name'</span>: <span class="string">u'name_1'</span>&#125;,</div><div class="line"> &#123;<span class="string">'name'</span>: <span class="string">u'name_1'</span>&#125;,</div><div class="line"> &#123;<span class="string">'name'</span>: <span class="string">u'name_1'</span>&#125;,</div><div class="line"> &#123;<span class="string">'name'</span>: <span class="string">u'name_2'</span>&#125;,</div><div class="line"> &#123;<span class="string">'name'</span>: <span class="string">u'name_3'</span>&#125;,</div><div class="line"> &#123;<span class="string">'name'</span>: <span class="string">u'name_4'</span>&#125;,</div><div class="line"> &#123;<span class="string">'name'</span>: <span class="string">u'name_5'</span>&#125;,</div><div class="line"> &#123;<span class="string">'name'</span>: <span class="string">u'name_6'</span>&#125;,</div><div class="line"> &#123;<span class="string">'name'</span>: <span class="string">u'name_7'</span>&#125;,</div><div class="line"> &#123;<span class="string">'name'</span>: <span class="string">u'name_8'</span>&#125;,</div><div class="line"> &#123;<span class="string">'name'</span>: <span class="string">u'name_9'</span>&#125;]</div></pre></td></tr></table></figure>
<p>当然可以根据自己的需求, 去修改序列化的基类. 上面定义的基类, 在逻辑判断中没有考虑指定多个条件时的情况, 所以根据自己的需求, 自己修改;</p>
<p>题外话, 当我们model中有定义外键的时候, 那序列化的字段, 就会变成引用表的id值(通常是这样的)</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">elif</span> BaseModelMixin <span class="keyword">in</span> value.__class__.__bases__ <span class="keyword">or</span> SerializeMixin <span class="keyword">in</span> value.__class__.__bases__:</div><div class="line">    <span class="keyword">try</span>:</div><div class="line">        ret = value._get_public()</div><div class="line">    <span class="keyword">except</span>:</div><div class="line">        <span class="keyword">pass</span></div></pre></td></tr></table></figure>
<p>而处理的方式就在上面, 直接或者引用表的的’_get_public’方法, 而当没有定义的时候, 在就取默认值了</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在flask开发运维后台的时候, 比较多的需求是, 从数据库取得结果, 需要序列化之后传递给前端的表格插件.&lt;/p&gt;
&lt;p&gt;下面我们创建一个基类, 在定义model的时候, 继承就可以达到想要的结果了&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;26&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;27&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;28&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;29&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;30&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;31&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;32&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;33&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;34&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;35&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;36&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;37&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;38&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;39&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;40&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;41&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;42&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;43&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;44&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;45&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;46&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;47&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;48&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;49&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;50&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;51&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;52&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;53&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;54&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;55&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;56&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;57&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;58&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;59&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;60&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;61&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;62&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;63&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;64&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;65&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;66&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;67&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;68&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;69&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;70&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;71&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;72&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;73&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;74&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;75&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;76&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;77&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;78&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;79&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;80&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;81&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;82&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;83&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;84&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;85&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;86&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;87&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;88&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;89&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;90&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;91&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;92&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;93&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;94&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;95&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;96&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;97&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;98&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;99&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;100&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;101&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;102&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;103&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;104&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;105&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;106&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;107&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;108&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;109&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;110&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;111&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;112&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;113&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;114&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;115&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;116&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;117&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;118&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;119&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;120&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;121&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;122&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;123&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;124&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;125&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;126&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;127&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;128&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;129&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;130&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;131&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;132&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;133&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;134&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;135&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;136&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;137&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;138&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;139&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;140&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;141&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;142&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;143&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;144&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;145&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;146&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;147&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;148&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;149&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;150&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;SerializeMixin&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(object)&lt;/span&gt;:&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&#39;Mixin for retrieving public fields of model in json-compatible format&#39;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    __public__ = &lt;span class=&quot;keyword&quot;&gt;None&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    __exclude__ = &lt;span class=&quot;keyword&quot;&gt;None&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;to_json&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self, exclude=[], include=[], only=[], convert=True, replace=False, extend=&amp;#123;&amp;#125;, **kwargs)&lt;/span&gt;:&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&quot;&quot;&quot;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        :param exclude: 在转化时指定需要排除的字段列表&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        :param include: 在转化时指定需要包含的字段列表&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        :param only:    在转化时指定仅仅包含的字段列表&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        :param convert: 附加转换结果显示,当需要转换值的显示成指定的状态值使用, 状态值需要在kwargs指定.\&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                     &amp;#123;&#39;status&#39;: &amp;#123;&#39;0&#39;: u&#39;正常&#39;, &#39;1&#39;: u&#39;故障&#39;,...&amp;#125;&amp;#125;, 将会在返回的字段中附加一个同名的且前面加&#39;_&#39;的字段,\&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                     当status的值为&#39;0&#39;时, 那返回值会附加的&#39;_status&#39;字段,且&#39;_status&#39;字段值为u&#39;正常&#39;.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                    当存在外键的时候, 会获取外键中是否有&#39;_get_public&#39;方法,有的化将显示一个友好的值.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        :param replace: 当为True时,将不会产生_下划线的转换字段,而是直接替换&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        :param extend: 扩充值, 想格式化的json字符串扩充值,主要是解决外键引用而又想显示值&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        :param kwargs:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        :return:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &quot;&quot;&quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        data = &amp;#123;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        items = self._sa_instance_state.attrs.items()&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        column_name = self._sa_instance_state.attrs.keys()&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        self.convert = convert&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        self.kwargs = kwargs&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; only:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;string&quot;&gt;&quot;&quot;&quot; If you specify the parameters of only &quot;&quot;&quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            _public = set(only)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            _exclude = set([])&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; self.__public__ &lt;span class=&quot;keyword&quot;&gt;and&lt;/span&gt; self.__exclude__ &lt;span class=&quot;keyword&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;None&lt;/span&gt;:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                &lt;span class=&quot;string&quot;&gt;&quot;&quot;&quot; __public__ is True and __exclude__ is False &quot;&quot;&quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                _public = self.__public__&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                _exclude = []&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;elif&lt;/span&gt; self.__public__ &lt;span class=&quot;keyword&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;None&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;and&lt;/span&gt; self.__exclude__:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                &lt;span class=&quot;string&quot;&gt;&quot;&quot;&quot; __public__ is False and __exclude__ is True &quot;&quot;&quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                _public = []&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                _exclude = self.__exclude__&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;elif&lt;/span&gt; self.__public__ &lt;span class=&quot;keyword&quot;&gt;and&lt;/span&gt; self.__exclude__:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                &lt;span class=&quot;string&quot;&gt;&quot;&quot;&quot; __public__ is True and __exclude__ is True &quot;&quot;&quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                _exclude = self.__exclude__&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                _public = set(self.__public__) - set(_exclude)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                &lt;span class=&quot;string&quot;&gt;&quot;&quot;&quot; __public__ is False and __exclude__ is False &quot;&quot;&quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                _public = column_name&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                _exclude = []&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; exclude:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                &lt;span class=&quot;string&quot;&gt;&quot;&quot;&quot; If you specify the parameters of exclude &quot;&quot;&quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                _exclude = set(_exclude + exclude)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; include:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                &lt;span class=&quot;string&quot;&gt;&quot;&quot;&quot; If you specify the parameters of include &quot;&quot;&quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                _public = set(_public + include) - set(_exclude)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; key, field &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; items:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; _public &lt;span class=&quot;keyword&quot;&gt;and&lt;/span&gt; key &lt;span class=&quot;keyword&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; _public: &lt;span class=&quot;keyword&quot;&gt;continue&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; key &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; _exclude: &lt;span class=&quot;keyword&quot;&gt;continue&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            value = self._serialize(field.value)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            data[key] = value&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; convert &lt;span class=&quot;keyword&quot;&gt;and&lt;/span&gt; kwargs &lt;span class=&quot;keyword&quot;&gt;and&lt;/span&gt; kwargs.has_key(key):&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; replace &lt;span class=&quot;keyword&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;True&lt;/span&gt;:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                    _key = &lt;span class=&quot;string&quot;&gt;&#39;%s&#39;&lt;/span&gt; % key&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                    _key = &lt;span class=&quot;string&quot;&gt;&#39;_%s&#39;&lt;/span&gt; % key&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                data[_key] = kwargs.get(key, value)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;# data[_key] = kwargs[key].get(value, value)&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; extend:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            data.update(extend)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; data&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;    @classmethod&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;_serialize&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(cls, value, follow_fk=False)&lt;/span&gt;:&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        ret = value&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; isinstance(value, datetime.datetime) &lt;span class=&quot;keyword&quot;&gt;or&lt;/span&gt; isinstance(value, datetime.date):&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            ret = str(value)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;elif&lt;/span&gt; isinstance(value, uuid.UUID):&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            ret = str(value)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;elif&lt;/span&gt; BaseModelMixin &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; value.__class__.__bases__ &lt;span class=&quot;keyword&quot;&gt;or&lt;/span&gt; SerializeMixin &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; value.__class__.__bases__:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;# 一对多或者多对一&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt;:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                ret = value._get_public()&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;except&lt;/span&gt;:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;pass&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;elif&lt;/span&gt; AppenderMixin &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; value.__class__.__bases__:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;# 多对多&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt;:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                ret = [x._get_public() &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; x &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; value.all()]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;except&lt;/span&gt; Exception, ex:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;many to many : &#39;&lt;/span&gt;, ex&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;elif&lt;/span&gt; hasattr(value, &lt;span class=&quot;string&quot;&gt;&#39;__iter__&#39;&lt;/span&gt;):&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;# 迭代对象&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;# Don&#39;t set True&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; follow_fk:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                ret = []&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; v &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; value:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                    ret.append(cls._serialize(v))&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; ret&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;BaseModelMixin&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(SerializeMixin)&lt;/span&gt;:&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;&quot;&quot; 定义基础的Model用于继承 &quot;&quot;&quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    __table_args__ = &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&#39;mysql_engine&#39;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;u&#39;InnoDB&#39;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&#39;mysql_default_charset&#39;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;u&#39;utf8&#39;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;__repr__&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self)&lt;/span&gt;:&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; hasattr(self, &lt;span class=&quot;string&quot;&gt;&#39;name&#39;&lt;/span&gt;):&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;&amp;lt;%s %s&amp;gt;&#39;&lt;/span&gt; % (self.__class__.__name__, self.name)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;&amp;lt;%s %s&amp;gt;&#39;&lt;/span&gt; % (self.__class__.__name__, self.id )&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;_get_public&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self)&lt;/span&gt;:&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&quot;&quot;&quot; 当存在外键的时候, 一个友好的显示名称 &quot;&quot;&quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        ret = self&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt;:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; hasattr(self, &lt;span class=&quot;string&quot;&gt;&#39;name&#39;&lt;/span&gt;):&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                rt = self.name&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;elif&lt;/span&gt; hasattr(self, &lt;span class=&quot;string&quot;&gt;&#39;id&#39;&lt;/span&gt;):&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                rt = self.id&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;except&lt;/span&gt; Exception, ex:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;_get_public error:%s&#39;&lt;/span&gt; % str(ex)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; rt&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;save&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self)&lt;/span&gt;:&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        db.session.add(self)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        db.session.commit()&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;delete&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self)&lt;/span&gt;:&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        db.session.delete(self)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        db.session.commit()&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="flask" scheme="https://yoncan.github.io/categories/flask/"/>
    
    
      <category term="flask" scheme="https://yoncan.github.io/tags/flask/"/>
    
      <category term="sqlalchemy" scheme="https://yoncan.github.io/tags/sqlalchemy/"/>
    
  </entry>
  
  <entry>
    <title>运维后台资产管理的变更和备注记录功能</title>
    <link href="https://yoncan.github.io/blog/2016/07/yunwei-cmdb.html"/>
    <id>https://yoncan.github.io/blog/2016/07/yunwei-cmdb.html</id>
    <published>2016-07-03T16:27:30.000Z</published>
    <updated>2017-01-09T16:31:45.528Z</updated>
    
    <content type="html"><![CDATA[<p>前端太菜了,花了两天时间才弄好. 看来还得好好的学css</p>
<p><img src="/assert/images/2016-07-04-yunwei-cmdb/11.jpg" alt="后台的架构图"><br><a id="more"></a><br><img src="/assert/images/2016-07-04-yunwei-cmdb/22.jpg" alt="后台的架构图"><br><img src="/assert/images/2016-07-04-yunwei-cmdb/33.jpg" alt="后台的架构图"><br><img src="/assert/images/2016-07-04-yunwei-cmdb/44.jpg" alt="后台的架构图"><br><img src="/assert/images/2016-07-04-yunwei-cmdb/44.jpg" alt="后台的架构图"></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;前端太菜了,花了两天时间才弄好. 看来还得好好的学css&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/assert/images/2016-07-04-yunwei-cmdb/11.jpg&quot; alt=&quot;后台的架构图&quot;&gt;&lt;br&gt;
    
    </summary>
    
      <category term="flask" scheme="https://yoncan.github.io/categories/flask/"/>
    
    
      <category term="flask" scheme="https://yoncan.github.io/tags/flask/"/>
    
  </entry>
  
  <entry>
    <title>Ansible 2.0 最新版本的API封装</title>
    <link href="https://yoncan.github.io/blog/2016/03/ansible-api.html"/>
    <id>https://yoncan.github.io/blog/2016/03/ansible-api.html</id>
    <published>2016-03-05T16:24:10.000Z</published>
    <updated>2017-01-09T16:25:33.686Z</updated>
    
    <content type="html"><![CDATA[<p>ansible 2.0之后的api变更了, 下面是封装好了2.0之后的api使用方法</p>
<p>具体的使用, 方法内有案例. 如果看过ansible的源码, 就可以容易理解这个API的封装. 其中要说的是 self.options 这个.  这个是构建命令行参数的, 当我们使用命令行上去执行指令ansible -i /etc/ansible/hosts localhost -m ping 时, 虽然只带了-i 和 -m 指定模块, 但是有很多默认值. 最终的所有参数的设置, 都是附加到self.options的</p>
<p>想去了解ansible API的同学, 建议去 自己分析下源码 /usr/lib/python2.6/site-packages/ansible/cli/adhoc.py; 就很容易明白了</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div><div class="line">193</div><div class="line">194</div><div class="line">195</div><div class="line">196</div><div class="line">197</div><div class="line">198</div><div class="line">199</div><div class="line">200</div><div class="line">201</div><div class="line">202</div><div class="line">203</div><div class="line">204</div><div class="line">205</div><div class="line">206</div><div class="line">207</div><div class="line">208</div><div class="line">209</div><div class="line">210</div><div class="line">211</div><div class="line">212</div><div class="line">213</div><div class="line">214</div><div class="line">215</div><div class="line">216</div><div class="line">217</div><div class="line">218</div><div class="line">219</div><div class="line">220</div><div class="line">221</div><div class="line">222</div><div class="line">223</div><div class="line">224</div><div class="line">225</div><div class="line">226</div><div class="line">227</div><div class="line">228</div><div class="line">229</div><div class="line">230</div><div class="line">231</div><div class="line">232</div><div class="line">233</div><div class="line">234</div><div class="line">235</div><div class="line">236</div><div class="line">237</div><div class="line">238</div><div class="line">239</div><div class="line">240</div><div class="line">241</div><div class="line">242</div><div class="line">243</div><div class="line">244</div><div class="line">245</div><div class="line">246</div><div class="line">247</div><div class="line">248</div><div class="line">249</div><div class="line">250</div><div class="line">251</div><div class="line">252</div><div class="line">253</div><div class="line">254</div><div class="line">255</div><div class="line">256</div><div class="line">257</div><div class="line">258</div><div class="line">259</div><div class="line">260</div><div class="line">261</div><div class="line">262</div><div class="line">263</div><div class="line">264</div><div class="line">265</div><div class="line">266</div><div class="line">267</div><div class="line">268</div><div class="line">269</div><div class="line">270</div><div class="line">271</div><div class="line">272</div><div class="line">273</div><div class="line">274</div><div class="line">275</div><div class="line">276</div><div class="line">277</div><div class="line">278</div><div class="line">279</div><div class="line">280</div><div class="line">281</div><div class="line">282</div><div class="line">283</div><div class="line">284</div><div class="line">285</div><div class="line">286</div><div class="line">287</div><div class="line">288</div><div class="line">289</div><div class="line">290</div><div class="line">291</div><div class="line">292</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#!/usr/bin/python</span></div><div class="line"><span class="comment"># -*- coding: utf-8 -*-</span></div><div class="line"><span class="comment"># Author: Ycan</span></div><div class="line"><span class="comment"># More: http://www.ehco.me/</span></div><div class="line"><span class="comment"># Ansible API</span></div><div class="line"><span class="comment"># Ansible Version &gt;=2.0</span></div><div class="line"> </div><div class="line"><span class="keyword">from</span> __future__ <span class="keyword">import</span> (absolute_import, division, print_function)</div><div class="line"> </div><div class="line"><span class="keyword">from</span> ansible.executor.task_queue_manager <span class="keyword">import</span> TaskQueueManager</div><div class="line"><span class="keyword">from</span> ansible.inventory <span class="keyword">import</span> Inventory</div><div class="line"><span class="keyword">from</span> ansible.parsing.dataloader <span class="keyword">import</span> DataLoader</div><div class="line"><span class="keyword">from</span> ansible.vars <span class="keyword">import</span> VariableManager</div><div class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> namedtuple</div><div class="line"><span class="keyword">from</span> ansible.playbook.play <span class="keyword">import</span> Play</div><div class="line"><span class="keyword">from</span> ansible <span class="keyword">import</span> constants <span class="keyword">as</span> C</div><div class="line"><span class="keyword">from</span> ansible.parsing.splitter <span class="keyword">import</span> parse_kv</div><div class="line"><span class="keyword">from</span> ansible.executor.playbook_executor <span class="keyword">import</span> PlaybookExecutor</div><div class="line"><span class="keyword">from</span> ansible.utils.vars <span class="keyword">import</span> load_extra_vars</div><div class="line"><span class="keyword">import</span> os</div><div class="line"> </div><div class="line"> </div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">DoGoAnsibleEorror</span><span class="params">(Exception)</span>:</span> <span class="keyword">pass</span></div><div class="line"> </div><div class="line"> </div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">DoGoMinix</span><span class="params">(object)</span>:</span></div><div class="line">    <span class="string">""" 列出一些基础的options</span></div><div class="line">    subset: '127.0.0.1'</div><div class="line">    extra_vars: ["name='yagcan'"] 或者 json格式也可以</div><div class="line">    tags: "test,test01"</div><div class="line">    """</div><div class="line"> </div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, inventory_file=None, passwords=None, verbosity=<span class="number">0</span>, cb=<span class="string">'minimal'</span>)</span>:</span></div><div class="line"> </div><div class="line">        <span class="keyword">if</span> passwords <span class="keyword">is</span> <span class="keyword">None</span>:</div><div class="line">            passwords = &#123;<span class="string">'conn_pass'</span>: <span class="string">''</span>, <span class="string">'become_pass'</span>: <span class="string">''</span>&#125;</div><div class="line"> </div><div class="line">        <span class="keyword">if</span> inventory_file <span class="keyword">is</span> <span class="keyword">None</span>:</div><div class="line">            inventory_file = C.DEFAULT_HOST_LIST</div><div class="line"> </div><div class="line">        self.verbosity = verbosity</div><div class="line">        self.inventory_file = inventory_file</div><div class="line"> </div><div class="line">        self.passwords = passwords</div><div class="line"> </div><div class="line">        self.cb = cb</div><div class="line"> </div><div class="line">        self._set_option = <span class="keyword">False</span></div><div class="line">        self._set_hosts = <span class="keyword">False</span></div><div class="line"> </div><div class="line">        <span class="comment"># initialize needed objects</span></div><div class="line">        self.variable_manager = VariableManager()</div><div class="line"> </div><div class="line">        self.loader = DataLoader()</div><div class="line"> </div><div class="line"> </div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">_base_option</span><span class="params">(self)</span>:</span></div><div class="line">        <span class="string">""" base option"""</span></div><div class="line">        <span class="keyword">return</span> dict(</div><div class="line">            connection=C.DEFAULT_TRANSPORT,</div><div class="line">            forks=C.DEFAULT_FORKS,</div><div class="line">            become=<span class="keyword">False</span>,</div><div class="line">            become_method=C.DEFAULT_BECOME_METHOD,</div><div class="line">            become_user=<span class="keyword">None</span>,</div><div class="line">            check=<span class="keyword">False</span>,</div><div class="line">            module_path=<span class="keyword">None</span>,</div><div class="line">            remote_user=C.DEFAULT_REMOTE_USER,</div><div class="line">            private_key_file=C.DEFAULT_PRIVATE_KEY_FILE,</div><div class="line">            ssh_common_args=<span class="string">''</span>,</div><div class="line">            sftp_extra_args=<span class="string">''</span>,</div><div class="line">            scp_extra_args=<span class="string">''</span>,</div><div class="line">            ssh_extra_args=<span class="string">''</span>,</div><div class="line">            verbosity=self.verbosity,</div><div class="line">            listhosts=<span class="keyword">False</span>,</div><div class="line">            listtags=<span class="keyword">False</span>,</div><div class="line">            listtasks=<span class="keyword">False</span>,</div><div class="line">            syntax=<span class="keyword">False</span>,</div><div class="line">            inventory=<span class="keyword">None</span></div><div class="line">        )</div><div class="line"> </div><div class="line"> </div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">limit_hosts</span><span class="params">(self, host_lists)</span>:</span></div><div class="line">        <span class="comment"># --limit</span></div><div class="line">        self._set_hosts = <span class="keyword">True</span></div><div class="line"> </div><div class="line">        self.host_lists = host_lists</div><div class="line"> </div><div class="line">        <span class="keyword">if</span> isinstance(host_lists, list):</div><div class="line">            self.host_lists = <span class="string">','</span>.join(host_lists)</div><div class="line"> </div><div class="line"> </div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">set_option</span><span class="params">(self, **kwargs)</span>:</span></div><div class="line">        <span class="string">""" set Options</span></div><div class="line">        usage:</div><div class="line">            base_option = self._base_option()</div><div class="line">            _option = base_option.copy()</div><div class="line">            _option.upadte(&#123;'verbosity': 1, 'forks': 20&#125;)</div><div class="line">            self.set_option(**_option)</div><div class="line">        """</div><div class="line"> </div><div class="line">        self._set_option = <span class="keyword">True</span></div><div class="line"> </div><div class="line">        self.options = self._options(**kwargs)</div><div class="line"> </div><div class="line"> </div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">_options</span><span class="params">(self, **kwargs)</span>:</span></div><div class="line">        <span class="string">""" set options</span></div><div class="line">        """</div><div class="line">        keys = kwargs.keys()</div><div class="line">        Options = namedtuple(<span class="string">'Options'</span>, keys)</div><div class="line">        v = Options(**kwargs)</div><div class="line"> </div><div class="line">        <span class="keyword">if</span> v.inventory <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">None</span>:</div><div class="line">            self.inventory_file = v.inventory</div><div class="line"> </div><div class="line">        <span class="keyword">return</span> v</div><div class="line"> </div><div class="line"> </div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">_prepare_run</span><span class="params">(self)</span>:</span></div><div class="line">        <span class="comment"># initialize needed objects</span></div><div class="line"> </div><div class="line">        <span class="comment"># when not set_option</span></div><div class="line">        <span class="keyword">if</span> self._set_option <span class="keyword">is</span> <span class="keyword">False</span>:</div><div class="line">            _base_option = self._base_option().copy()</div><div class="line">            self.options = self._options(**_base_option)</div><div class="line"> </div><div class="line">        self.inventory = Inventory(loader=self.loader, variable_manager=self.variable_manager,</div><div class="line">                                   host_list=self.inventory_file)</div><div class="line"> </div><div class="line">        self.variable_manager.set_inventory(self.inventory)</div><div class="line"> </div><div class="line">        <span class="keyword">if</span> self._set_hosts:</div><div class="line">            self.inventory.subset(self.host_lists)</div><div class="line"> </div><div class="line">        <span class="keyword">if</span> len(self.inventory.list_hosts()) == <span class="number">0</span>:</div><div class="line">            <span class="keyword">raise</span> DoGoAnsibleEorror(<span class="string">u'match any hosts empty..'</span>)</div><div class="line"> </div><div class="line"> </div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">run</span><span class="params">(self, play_data)</span>:</span></div><div class="line">        <span class="keyword">pass</span></div><div class="line"> </div><div class="line"> </div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">DoGoAdHocCLI</span><span class="params">(DoGoMinix)</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, *args, **kwargs)</span>:</span></div><div class="line">        <span class="string">""" 案例:</span></div><div class="line">        adh = DoGoAdHocCLI(inventory_file='/etc/ansible/hosts')</div><div class="line">        _base_options = adh._base_option()</div><div class="line">        options = _base_options.copy()</div><div class="line">        options.update(&#123;</div><div class="line">            'inventory': '/etc/ansible/hosts',</div><div class="line">            'forks': 10</div><div class="line">        &#125;)</div><div class="line">        adh.set_option(**options)</div><div class="line"> </div><div class="line">        play_data = dict(</div><div class="line">            name="DoGo CMDB gather facts",</div><div class="line">            hosts=['localhost'],</div><div class="line">            gather_facts=True,</div><div class="line">            tasks=[dict(action=dict(module='setup'))]</div><div class="line">        )</div><div class="line">        return adh.run(play_data)</div><div class="line"> </div><div class="line">        """</div><div class="line"> </div><div class="line">        super(DoGoAdHocCLI, self).__init__(*args, **kwargs)</div><div class="line"> </div><div class="line"> </div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">run</span><span class="params">(self, play_data)</span>:</span></div><div class="line">        <span class="string">"""</span></div><div class="line">        play_data = dict(</div><div class="line">            name="Ansible Ad-Hoc",</div><div class="line">            hosts=pattern,</div><div class="line">            gather_facts=True,</div><div class="line">            tasks=[dict(action=dict(module='service', args=&#123;'name': 'vsftpd', 'state': 'restarted'&#125;), async=async, poll=poll)]</div><div class="line">        )</div><div class="line">        """</div><div class="line">        self._prepare_run()</div><div class="line"> </div><div class="line">        play = Play().load(play_data, variable_manager=self.variable_manager, loader=self.loader)</div><div class="line"> </div><div class="line">        tqm = <span class="keyword">None</span></div><div class="line">        <span class="keyword">try</span>:</div><div class="line">            tqm = TaskQueueManager(</div><div class="line">                inventory=self.inventory,</div><div class="line">                variable_manager=self.variable_manager,</div><div class="line">                loader=self.loader,</div><div class="line">                options=self.options,</div><div class="line">                passwords=self.passwords,</div><div class="line">                stdout_callback=self.cb,</div><div class="line">                run_additional_callbacks=C.DEFAULT_LOAD_CALLBACK_PLUGINS,</div><div class="line">                run_tree=<span class="keyword">False</span>,</div><div class="line">            )</div><div class="line"> </div><div class="line">            result = tqm.run(play)</div><div class="line">            <span class="keyword">return</span> result</div><div class="line">        <span class="keyword">finally</span>:</div><div class="line">            <span class="keyword">if</span> tqm:</div><div class="line">                tqm.cleanup()</div><div class="line"> </div><div class="line"> </div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">DoGoPlaybookCLI</span><span class="params">(DoGoMinix)</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, *args, **kwargs)</span>:</span></div><div class="line">        <span class="string">""" example:</span></div><div class="line">            play_book = get_ansible_task_file('task_rsync.yml')</div><div class="line"> </div><div class="line">            forks = len(host_list)</div><div class="line">            if forks == 0:</div><div class="line">                raise ValueError('host_list empty....')</div><div class="line"> </div><div class="line">            if forks &gt; 10: forks = 10</div><div class="line"> </div><div class="line">            pb = DoGoPlaybookCLI(inventory_file='/etc/ansible/hosts', cb='skippy')</div><div class="line"> </div><div class="line">            _base_options = pb._base_option()</div><div class="line">            options = _base_options.copy()</div><div class="line">            options.update(&#123;</div><div class="line">                'inventory': '/etc/ansible/hosts',</div><div class="line">                'forks': forks,</div><div class="line">                'tags': 'add_rsync_module',</div><div class="line">                'subset': ','.join(host_list),</div><div class="line">                'extra_vars': [json.dumps(&#123;'module': module&#125;)]</div><div class="line">            &#125;)</div><div class="line">            pb.set_option(**options)</div><div class="line"> </div><div class="line">            pb.limit_hosts(','.join(host_list))</div><div class="line"> </div><div class="line">            if not os.path.isfile(play_book):</div><div class="line">                raise OSError('task file &#123;0&#125; not found!'.format(play_book))</div><div class="line"> </div><div class="line">            kw = &#123;'playbooks': [play_book]&#125;</div><div class="line">            return pb.run(**kw)</div><div class="line"> </div><div class="line">        """</div><div class="line"> </div><div class="line">        super(DoGoPlaybookCLI, self).__init__(*args, **kwargs)</div><div class="line"> </div><div class="line"> </div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">run</span><span class="params">(self, playbooks)</span>:</span></div><div class="line">        <span class="string">"""</span></div><div class="line">        param: `playbooks`: type string or list, example: ['/etc/ansible/test.yml'], '/etc/ansible/test1.yml, /etc/ansible/test2.yml'</div><div class="line">        param: `limit`:  eq --limit ''</div><div class="line">        """</div><div class="line">        self._prepare_run()</div><div class="line">        self.variable_manager.extra_vars = load_extra_vars(loader=self.loader, options=self.options)</div><div class="line"> </div><div class="line">        results = <span class="number">0</span></div><div class="line"> </div><div class="line">        <span class="keyword">if</span> isinstance(playbooks, basestring):</div><div class="line">            <span class="keyword">if</span> <span class="string">','</span> <span class="keyword">in</span> playbooks:</div><div class="line">                playbooks = [pl.strip() <span class="keyword">for</span> pl <span class="keyword">in</span> playbooks.split(<span class="string">','</span>) <span class="keyword">if</span> os.path.exists(pl)]</div><div class="line">            <span class="keyword">else</span>:</div><div class="line">                playbooks = [playbooks] <span class="keyword">if</span> os.path.exists(playbooks) <span class="keyword">else</span> []</div><div class="line"> </div><div class="line">        <span class="keyword">if</span> len(playbooks) == <span class="number">0</span>:</div><div class="line">            <span class="keyword">raise</span> DoGoAnsibleEorror(<span class="string">u'&#123;0&#125; invalid'</span>.format(playbooks))</div><div class="line"> </div><div class="line">        <span class="keyword">try</span>:</div><div class="line">            <span class="comment"># create the playbook executor, which manages running the plays via a task queue manager</span></div><div class="line">            pbex = PlaybookExecutor(playbooks=playbooks, inventory=self.inventory,</div><div class="line">                                    variable_manager=self.variable_manager,</div><div class="line">                                    loader=self.loader, options=self.options, passwords=self.passwords)</div><div class="line"> </div><div class="line">            results = pbex.run()</div><div class="line">        <span class="keyword">except</span> Exception, ex:</div><div class="line">            results = str(ex)</div><div class="line">        <span class="keyword">finally</span>:</div><div class="line">            <span class="keyword">return</span> results</div><div class="line"> </div><div class="line"> </div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">test_setup</span><span class="params">(host_list=[])</span>:</span></div><div class="line">    <span class="comment"># 测试setup模块</span></div><div class="line">    <span class="keyword">if</span> host_list:</div><div class="line">        adh = DoGoAdHocCLI(inventory_file=<span class="string">'/etc/ansible/hosts'</span>)</div><div class="line">        _base_options = adh._base_option()</div><div class="line">        options = _base_options.copy()</div><div class="line">        options.update(&#123;</div><div class="line">            <span class="string">'inventory'</span>: <span class="string">'/etc/ansible/hosts'</span></div><div class="line">        &#125;)</div><div class="line">        adh.set_option(**options)</div><div class="line"> </div><div class="line">        play_data = dict(</div><div class="line">            name=<span class="string">"DoGo CMDB gather facts"</span>,</div><div class="line">            hosts=host_list,</div><div class="line">            gather_facts=<span class="keyword">True</span>,</div><div class="line">            tasks=[dict(action=dict(module=<span class="string">'setup'</span>))]</div><div class="line">        )</div><div class="line">        <span class="keyword">return</span> adh.run(play_data)</div><div class="line">    <span class="keyword">return</span> <span class="keyword">False</span></div><div class="line"> </div><div class="line"> </div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    test_setup(host_list=[<span class="string">'127.0.0.1'</span>])</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;ansible 2.0之后的api变更了, 下面是封装好了2.0之后的api使用方法&lt;/p&gt;
&lt;p&gt;具体的使用, 方法内有案例. 如果看过ansible的源码, 就可以容易理解这个API的封装. 其中要说的是 self.options 这个.  这个是构建命令行参数的, 当
    
    </summary>
    
      <category term="ansible" scheme="https://yoncan.github.io/categories/ansible/"/>
    
    
      <category term="ansible" scheme="https://yoncan.github.io/tags/ansible/"/>
    
      <category term="api" scheme="https://yoncan.github.io/tags/api/"/>
    
  </entry>
  
</feed>
